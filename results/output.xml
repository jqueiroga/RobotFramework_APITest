<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20201007 00:58:07.002" rpa="false">
<suite id="s1" name="authorizationAPI" source="C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\tests\authorizationAPI.robot">
<kw name="Conectar a bizSandboxAPI" library="authorizationKWS" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>${URL_BASE_API}</arg>
</arguments>
<msg timestamp="20201007 00:58:07.489" level="INFO">Creating Session using : alias=bizSandboxAPI, url=https://sandbox-code.biz.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201007 00:58:07.489" endtime="20201007 00:58:07.489"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:07.488" endtime="20201007 00:58:07.489"></status>
</kw>
<test id="s1-t1" name="Loading Login Screen">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:07.492" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:07.492" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:07.491" endtime="20201007 00:58:07.492"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:07.493" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:07.493" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:07.493" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:07.492" endtime="20201007 00:58:07.493"></status>
</kw>
<msg timestamp="20201007 00:58:07.493" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:07.491" endtime="20201007 00:58:07.493"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:07.494" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:07.494" endtime="20201007 00:58:07.494"></status>
</kw>
<msg timestamp="20201007 00:58:07.494" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:07.493" endtime="20201007 00:58:07.494"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:08.784" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:08.785" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:08.785" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:08.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:07.495" endtime="20201007 00:58:08.786"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:08.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:08.787" endtime="20201007 00:58:08.790"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:08.791" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:08.790" endtime="20201007 00:58:08.791"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:08.792" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:08.791" endtime="20201007 00:58:08.793"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:07.490" endtime="20201007 00:58:08.793"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:08.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:08.795" endtime="20201007 00:58:08.796"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:08.794" endtime="20201007 00:58:08.797"></status>
</kw>
<kw name="Carregar os UUIDs do Virtual Keyboard" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/virtualKeyboard.json</arg>
</arguments>
<assign>
<var>${keyboardPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:08.800" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\virtualKeyboard.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\virtualKeyboard.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:08.801" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/{{user_id}}/keyboard",
        "tipo": "GET",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key":...</msg>
<status status="PASS" starttime="20201007 00:58:08.799" endtime="20201007 00:58:08.801"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:08.802" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/{{user_id}}/keyboard",
        "tipo": "GET",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": [
            {
                "Label": "7;3",
                "Value": "a314a175-0c8b-409f-ab39-af468526c0ba"
            },
            {
                "Label": "1;0",
                "Value": "6ea1463e-572a-4976-99fa-6bcdb6aab389"
            },
            {
                "Label": "8;4",
                "Value": "4f1b361d-9afc-4466-88a2-961ab3178bbb"
            },
            {
                "Label": "9;5",
                "Value": "d01837ae-29ee-49d4-8b6b-aaeec1357eaa"
            },
            {
                "Label": "6;2",
                "Value": "392b79d2-9175-418e-8d04-270709af02e4"
            }
        ]
    }
} </msg>
<msg timestamp="20201007 00:58:08.802" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:08.802" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/{{user_id}}/keyboard', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}, 'body': '', '...</msg>
<status status="PASS" starttime="20201007 00:58:08.801" endtime="20201007 00:58:08.802"></status>
</kw>
<msg timestamp="20201007 00:58:08.803" level="INFO">${keyboardPayload} = {'Validate return code 200': {'url': '/authentication/{{user_id}}/keyboard', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}, 'body': '', '...</msg>
<status status="PASS" starttime="20201007 00:58:08.798" endtime="20201007 00:58:08.803"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${keyboardPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:08.807" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:08.806" endtime="20201007 00:58:08.807"></status>
</kw>
<msg timestamp="20201007 00:58:08.807" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:08.804" endtime="20201007 00:58:08.807"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${USER_ID}/keyboard</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:08.989" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 path_url=/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:08.989" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 status=200, reason=OK 
 body=[
  {
    "Label": "6;2",
    "Value": "392b79d2-9175-418e-8d04-270709af02e4"
  },
  {
    "Label": "1;0",
    "Value": "6ea1463e-572a-4976-99fa-6bcdb6aab389"
  },
  {
    "Label": "7;3",
    "Value": "a314a175-0c8b-409f-ab39-af468526c0ba"
  },
  {
    "Label": "8;4",
    "Value": "4f1b361d-9afc-4466-88a2-961ab3178bbb"
  },
  {
    "Label": "9;5",
    "Value": "d01837ae-29ee-49d4-8b6b-aaeec1357eaa"
  }
] 
 </msg>
<msg timestamp="20201007 00:58:08.989" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:09.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:08.808" endtime="20201007 00:58:09.022"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.023" endtime="20201007 00:58:09.024"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${keyboardPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.024" endtime="20201007 00:58:09.025"></status>
</kw>
<kw name="Fill Dictionary of virtual Keyboard" library="authorizationKWS">
<kw name="${index} IN RANGE [ ${10} ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.028" level="INFO">${indexString} = 0</msg>
<status status="PASS" starttime="20201007 00:58:09.027" endtime="20201007 00:58:09.028"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.032" level="FAIL">'6;2' does not contain '0'</msg>
<status status="FAIL" starttime="20201007 00:58:09.031" endtime="20201007 00:58:09.032"></status>
</kw>
<msg timestamp="20201007 00:58:09.032" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.030" endtime="20201007 00:58:09.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.033" endtime="20201007 00:58:09.033"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.029" endtime="20201007 00:58:09.033"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.035" endtime="20201007 00:58:09.036"></status>
</kw>
<msg timestamp="20201007 00:58:09.036" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.034" endtime="20201007 00:58:09.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.038" endtime="20201007 00:58:09.039"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.037" endtime="20201007 00:58:09.039"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.034" endtime="20201007 00:58:09.039"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.041" level="FAIL">'7;3' does not contain '0'</msg>
<status status="FAIL" starttime="20201007 00:58:09.040" endtime="20201007 00:58:09.041"></status>
</kw>
<msg timestamp="20201007 00:58:09.041" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.039" endtime="20201007 00:58:09.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.042" endtime="20201007 00:58:09.042"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.039" endtime="20201007 00:58:09.042"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.045" level="FAIL">'8;4' does not contain '0'</msg>
<status status="FAIL" starttime="20201007 00:58:09.044" endtime="20201007 00:58:09.045"></status>
</kw>
<msg timestamp="20201007 00:58:09.045" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.043" endtime="20201007 00:58:09.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.046" endtime="20201007 00:58:09.046"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.043" endtime="20201007 00:58:09.047"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.049" level="FAIL">'9;5' does not contain '0'</msg>
<status status="FAIL" starttime="20201007 00:58:09.048" endtime="20201007 00:58:09.049"></status>
</kw>
<msg timestamp="20201007 00:58:09.050" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.047" endtime="20201007 00:58:09.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.050" endtime="20201007 00:58:09.051"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.047" endtime="20201007 00:58:09.051"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.029" endtime="20201007 00:58:09.051"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.028" endtime="20201007 00:58:09.051"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.026" endtime="20201007 00:58:09.051"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.053" level="INFO">${indexString} = 1</msg>
<status status="PASS" starttime="20201007 00:58:09.052" endtime="20201007 00:58:09.053"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.060" level="FAIL">'6;2' does not contain '1'</msg>
<status status="FAIL" starttime="20201007 00:58:09.059" endtime="20201007 00:58:09.060"></status>
</kw>
<msg timestamp="20201007 00:58:09.061" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.058" endtime="20201007 00:58:09.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.061" endtime="20201007 00:58:09.062"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.058" endtime="20201007 00:58:09.062"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.063" endtime="20201007 00:58:09.065"></status>
</kw>
<msg timestamp="20201007 00:58:09.065" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.062" endtime="20201007 00:58:09.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.066" endtime="20201007 00:58:09.067"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.065" endtime="20201007 00:58:09.067"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.062" endtime="20201007 00:58:09.067"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.070" level="FAIL">'7;3' does not contain '1'</msg>
<status status="FAIL" starttime="20201007 00:58:09.069" endtime="20201007 00:58:09.070"></status>
</kw>
<msg timestamp="20201007 00:58:09.070" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.068" endtime="20201007 00:58:09.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.070" endtime="20201007 00:58:09.071"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.068" endtime="20201007 00:58:09.071"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.074" level="FAIL">'8;4' does not contain '1'</msg>
<status status="FAIL" starttime="20201007 00:58:09.073" endtime="20201007 00:58:09.074"></status>
</kw>
<msg timestamp="20201007 00:58:09.074" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.072" endtime="20201007 00:58:09.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.075" endtime="20201007 00:58:09.076"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.072" endtime="20201007 00:58:09.076"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.079" level="FAIL">'9;5' does not contain '1'</msg>
<status status="FAIL" starttime="20201007 00:58:09.077" endtime="20201007 00:58:09.079"></status>
</kw>
<msg timestamp="20201007 00:58:09.079" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.076" endtime="20201007 00:58:09.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.080" endtime="20201007 00:58:09.080"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.076" endtime="20201007 00:58:09.080"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.057" endtime="20201007 00:58:09.080"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.053" endtime="20201007 00:58:09.081"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.052" endtime="20201007 00:58:09.081"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.082" level="INFO">${indexString} = 2</msg>
<status status="PASS" starttime="20201007 00:58:09.081" endtime="20201007 00:58:09.082"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.085" endtime="20201007 00:58:09.086"></status>
</kw>
<msg timestamp="20201007 00:58:09.086" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.084" endtime="20201007 00:58:09.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.088" endtime="20201007 00:58:09.089"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.087" endtime="20201007 00:58:09.094"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.084" endtime="20201007 00:58:09.094"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.096" level="FAIL">'1;0' does not contain '2'</msg>
<status status="FAIL" starttime="20201007 00:58:09.095" endtime="20201007 00:58:09.096"></status>
</kw>
<msg timestamp="20201007 00:58:09.097" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.094" endtime="20201007 00:58:09.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.097" endtime="20201007 00:58:09.098"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.094" endtime="20201007 00:58:09.098"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.101" level="FAIL">'7;3' does not contain '2'</msg>
<status status="FAIL" starttime="20201007 00:58:09.100" endtime="20201007 00:58:09.101"></status>
</kw>
<msg timestamp="20201007 00:58:09.101" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.099" endtime="20201007 00:58:09.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.102" endtime="20201007 00:58:09.102"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.098" endtime="20201007 00:58:09.102"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.105" level="FAIL">'8;4' does not contain '2'</msg>
<status status="FAIL" starttime="20201007 00:58:09.104" endtime="20201007 00:58:09.105"></status>
</kw>
<msg timestamp="20201007 00:58:09.106" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.103" endtime="20201007 00:58:09.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.106" endtime="20201007 00:58:09.106"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.103" endtime="20201007 00:58:09.106"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.108" level="FAIL">'9;5' does not contain '2'</msg>
<status status="FAIL" starttime="20201007 00:58:09.107" endtime="20201007 00:58:09.108"></status>
</kw>
<msg timestamp="20201007 00:58:09.108" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.107" endtime="20201007 00:58:09.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.109" endtime="20201007 00:58:09.109"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.107" endtime="20201007 00:58:09.109"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.083" endtime="20201007 00:58:09.109"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.082" endtime="20201007 00:58:09.109"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.081" endtime="20201007 00:58:09.109"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.110" level="INFO">${indexString} = 3</msg>
<status status="PASS" starttime="20201007 00:58:09.110" endtime="20201007 00:58:09.110"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.112" level="FAIL">'6;2' does not contain '3'</msg>
<status status="FAIL" starttime="20201007 00:58:09.111" endtime="20201007 00:58:09.112"></status>
</kw>
<msg timestamp="20201007 00:58:09.112" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.111" endtime="20201007 00:58:09.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.112" endtime="20201007 00:58:09.113"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.111" endtime="20201007 00:58:09.113"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.114" level="FAIL">'1;0' does not contain '3'</msg>
<status status="FAIL" starttime="20201007 00:58:09.113" endtime="20201007 00:58:09.114"></status>
</kw>
<msg timestamp="20201007 00:58:09.114" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.113" endtime="20201007 00:58:09.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.114" endtime="20201007 00:58:09.114"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.113" endtime="20201007 00:58:09.114"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.115" endtime="20201007 00:58:09.115"></status>
</kw>
<msg timestamp="20201007 00:58:09.115" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.115" endtime="20201007 00:58:09.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.116" endtime="20201007 00:58:09.116"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.116" endtime="20201007 00:58:09.116"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.114" endtime="20201007 00:58:09.116"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.117" level="FAIL">'8;4' does not contain '3'</msg>
<status status="FAIL" starttime="20201007 00:58:09.117" endtime="20201007 00:58:09.117"></status>
</kw>
<msg timestamp="20201007 00:58:09.117" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.117" endtime="20201007 00:58:09.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.118" endtime="20201007 00:58:09.118"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.116" endtime="20201007 00:58:09.118"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.119" level="FAIL">'9;5' does not contain '3'</msg>
<status status="FAIL" starttime="20201007 00:58:09.119" endtime="20201007 00:58:09.119"></status>
</kw>
<msg timestamp="20201007 00:58:09.120" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.118" endtime="20201007 00:58:09.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.120" endtime="20201007 00:58:09.120"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.118" endtime="20201007 00:58:09.120"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.111" endtime="20201007 00:58:09.120"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.110" endtime="20201007 00:58:09.120"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.109" endtime="20201007 00:58:09.120"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.122" level="INFO">${indexString} = 4</msg>
<status status="PASS" starttime="20201007 00:58:09.122" endtime="20201007 00:58:09.122"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.124" level="FAIL">'6;2' does not contain '4'</msg>
<status status="FAIL" starttime="20201007 00:58:09.124" endtime="20201007 00:58:09.124"></status>
</kw>
<msg timestamp="20201007 00:58:09.124" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.123" endtime="20201007 00:58:09.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.125" endtime="20201007 00:58:09.125"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.123" endtime="20201007 00:58:09.125"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.126" level="FAIL">'1;0' does not contain '4'</msg>
<status status="FAIL" starttime="20201007 00:58:09.125" endtime="20201007 00:58:09.126"></status>
</kw>
<msg timestamp="20201007 00:58:09.126" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.125" endtime="20201007 00:58:09.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.126" endtime="20201007 00:58:09.126"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.125" endtime="20201007 00:58:09.126"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.128" level="FAIL">'7;3' does not contain '4'</msg>
<status status="FAIL" starttime="20201007 00:58:09.127" endtime="20201007 00:58:09.128"></status>
</kw>
<msg timestamp="20201007 00:58:09.128" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.127" endtime="20201007 00:58:09.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.129" endtime="20201007 00:58:09.129"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.126" endtime="20201007 00:58:09.129"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.130" endtime="20201007 00:58:09.130"></status>
</kw>
<msg timestamp="20201007 00:58:09.130" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.129" endtime="20201007 00:58:09.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.131" endtime="20201007 00:58:09.132"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.130" endtime="20201007 00:58:09.132"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.129" endtime="20201007 00:58:09.132"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.133" level="FAIL">'9;5' does not contain '4'</msg>
<status status="FAIL" starttime="20201007 00:58:09.133" endtime="20201007 00:58:09.133"></status>
</kw>
<msg timestamp="20201007 00:58:09.133" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.132" endtime="20201007 00:58:09.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.133" endtime="20201007 00:58:09.134"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.132" endtime="20201007 00:58:09.134"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.123" endtime="20201007 00:58:09.134"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.122" endtime="20201007 00:58:09.134"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.120" endtime="20201007 00:58:09.134"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.134" level="INFO">${indexString} = 5</msg>
<status status="PASS" starttime="20201007 00:58:09.134" endtime="20201007 00:58:09.135"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.136" level="FAIL">'6;2' does not contain '5'</msg>
<status status="FAIL" starttime="20201007 00:58:09.136" endtime="20201007 00:58:09.136"></status>
</kw>
<msg timestamp="20201007 00:58:09.137" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.135" endtime="20201007 00:58:09.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.137" endtime="20201007 00:58:09.137"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.135" endtime="20201007 00:58:09.137"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.141" level="FAIL">'1;0' does not contain '5'</msg>
<status status="FAIL" starttime="20201007 00:58:09.138" endtime="20201007 00:58:09.142"></status>
</kw>
<msg timestamp="20201007 00:58:09.142" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.138" endtime="20201007 00:58:09.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.143" endtime="20201007 00:58:09.143"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.138" endtime="20201007 00:58:09.143"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.144" level="FAIL">'7;3' does not contain '5'</msg>
<status status="FAIL" starttime="20201007 00:58:09.144" endtime="20201007 00:58:09.144"></status>
</kw>
<msg timestamp="20201007 00:58:09.144" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.144" endtime="20201007 00:58:09.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.145" endtime="20201007 00:58:09.145"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.143" endtime="20201007 00:58:09.145"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.146" level="FAIL">'8;4' does not contain '5'</msg>
<status status="FAIL" starttime="20201007 00:58:09.146" endtime="20201007 00:58:09.146"></status>
</kw>
<msg timestamp="20201007 00:58:09.146" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.145" endtime="20201007 00:58:09.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.146" endtime="20201007 00:58:09.147"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.145" endtime="20201007 00:58:09.147"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.147" endtime="20201007 00:58:09.147"></status>
</kw>
<msg timestamp="20201007 00:58:09.148" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.147" endtime="20201007 00:58:09.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.148" endtime="20201007 00:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.148" endtime="20201007 00:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.147" endtime="20201007 00:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.135" endtime="20201007 00:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.135" endtime="20201007 00:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.134" endtime="20201007 00:58:09.149"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.149" level="INFO">${indexString} = 6</msg>
<status status="PASS" starttime="20201007 00:58:09.149" endtime="20201007 00:58:09.149"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.151" endtime="20201007 00:58:09.151"></status>
</kw>
<msg timestamp="20201007 00:58:09.151" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.150" endtime="20201007 00:58:09.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.152" endtime="20201007 00:58:09.152"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.151" endtime="20201007 00:58:09.152"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.150" endtime="20201007 00:58:09.152"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.153" level="FAIL">'1;0' does not contain '6'</msg>
<status status="FAIL" starttime="20201007 00:58:09.153" endtime="20201007 00:58:09.153"></status>
</kw>
<msg timestamp="20201007 00:58:09.153" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.152" endtime="20201007 00:58:09.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.153" endtime="20201007 00:58:09.154"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.152" endtime="20201007 00:58:09.155"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.157" level="FAIL">'7;3' does not contain '6'</msg>
<status status="FAIL" starttime="20201007 00:58:09.156" endtime="20201007 00:58:09.157"></status>
</kw>
<msg timestamp="20201007 00:58:09.158" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.155" endtime="20201007 00:58:09.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.158" endtime="20201007 00:58:09.158"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.155" endtime="20201007 00:58:09.158"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.159" level="FAIL">'8;4' does not contain '6'</msg>
<status status="FAIL" starttime="20201007 00:58:09.159" endtime="20201007 00:58:09.159"></status>
</kw>
<msg timestamp="20201007 00:58:09.159" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.158" endtime="20201007 00:58:09.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.159" endtime="20201007 00:58:09.160"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.158" endtime="20201007 00:58:09.160"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.161" level="FAIL">'9;5' does not contain '6'</msg>
<status status="FAIL" starttime="20201007 00:58:09.160" endtime="20201007 00:58:09.161"></status>
</kw>
<msg timestamp="20201007 00:58:09.161" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.160" endtime="20201007 00:58:09.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.161" endtime="20201007 00:58:09.161"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.160" endtime="20201007 00:58:09.161"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.150" endtime="20201007 00:58:09.161"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.149" endtime="20201007 00:58:09.161"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.149" endtime="20201007 00:58:09.161"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.162" level="INFO">${indexString} = 7</msg>
<status status="PASS" starttime="20201007 00:58:09.162" endtime="20201007 00:58:09.162"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.164" level="FAIL">'6;2' does not contain '7'</msg>
<status status="FAIL" starttime="20201007 00:58:09.163" endtime="20201007 00:58:09.164"></status>
</kw>
<msg timestamp="20201007 00:58:09.164" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.163" endtime="20201007 00:58:09.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.164" endtime="20201007 00:58:09.164"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.163" endtime="20201007 00:58:09.164"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.165" level="FAIL">'1;0' does not contain '7'</msg>
<status status="FAIL" starttime="20201007 00:58:09.165" endtime="20201007 00:58:09.165"></status>
</kw>
<msg timestamp="20201007 00:58:09.165" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.165" endtime="20201007 00:58:09.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.166" endtime="20201007 00:58:09.166"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.164" endtime="20201007 00:58:09.166"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.166" endtime="20201007 00:58:09.167"></status>
</kw>
<msg timestamp="20201007 00:58:09.167" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.166" endtime="20201007 00:58:09.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.167" endtime="20201007 00:58:09.168"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.167" endtime="20201007 00:58:09.168"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.166" endtime="20201007 00:58:09.168"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.169" level="FAIL">'8;4' does not contain '7'</msg>
<status status="FAIL" starttime="20201007 00:58:09.168" endtime="20201007 00:58:09.169"></status>
</kw>
<msg timestamp="20201007 00:58:09.169" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.168" endtime="20201007 00:58:09.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.169" endtime="20201007 00:58:09.170"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.168" endtime="20201007 00:58:09.170"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.171" level="FAIL">'9;5' does not contain '7'</msg>
<status status="FAIL" starttime="20201007 00:58:09.170" endtime="20201007 00:58:09.171"></status>
</kw>
<msg timestamp="20201007 00:58:09.171" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.170" endtime="20201007 00:58:09.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.172" endtime="20201007 00:58:09.172"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.170" endtime="20201007 00:58:09.172"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.162" endtime="20201007 00:58:09.172"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.162" endtime="20201007 00:58:09.172"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.161" endtime="20201007 00:58:09.172"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.173" level="INFO">${indexString} = 8</msg>
<status status="PASS" starttime="20201007 00:58:09.172" endtime="20201007 00:58:09.173"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.174" level="FAIL">'6;2' does not contain '8'</msg>
<status status="FAIL" starttime="20201007 00:58:09.174" endtime="20201007 00:58:09.174"></status>
</kw>
<msg timestamp="20201007 00:58:09.174" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.174" endtime="20201007 00:58:09.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.175" endtime="20201007 00:58:09.175"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.173" endtime="20201007 00:58:09.175"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.176" level="FAIL">'1;0' does not contain '8'</msg>
<status status="FAIL" starttime="20201007 00:58:09.176" endtime="20201007 00:58:09.176"></status>
</kw>
<msg timestamp="20201007 00:58:09.176" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.175" endtime="20201007 00:58:09.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.176" endtime="20201007 00:58:09.177"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.175" endtime="20201007 00:58:09.177"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.178" level="FAIL">'7;3' does not contain '8'</msg>
<status status="FAIL" starttime="20201007 00:58:09.177" endtime="20201007 00:58:09.178"></status>
</kw>
<msg timestamp="20201007 00:58:09.178" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.177" endtime="20201007 00:58:09.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.178" endtime="20201007 00:58:09.178"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.177" endtime="20201007 00:58:09.178"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.179" endtime="20201007 00:58:09.179"></status>
</kw>
<msg timestamp="20201007 00:58:09.179" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.178" endtime="20201007 00:58:09.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.180" endtime="20201007 00:58:09.180"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.179" endtime="20201007 00:58:09.180"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.178" endtime="20201007 00:58:09.180"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.181" level="FAIL">'9;5' does not contain '8'</msg>
<status status="FAIL" starttime="20201007 00:58:09.181" endtime="20201007 00:58:09.181"></status>
</kw>
<msg timestamp="20201007 00:58:09.181" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.180" endtime="20201007 00:58:09.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.181" endtime="20201007 00:58:09.182"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.180" endtime="20201007 00:58:09.182"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.173" endtime="20201007 00:58:09.182"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.173" endtime="20201007 00:58:09.182"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.172" endtime="20201007 00:58:09.182"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20201007 00:58:09.183" level="INFO">${indexString} = 9</msg>
<status status="PASS" starttime="20201007 00:58:09.183" endtime="20201007 00:58:09.183"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.185" level="FAIL">'6;2' does not contain '9'</msg>
<status status="FAIL" starttime="20201007 00:58:09.185" endtime="20201007 00:58:09.185"></status>
</kw>
<msg timestamp="20201007 00:58:09.185" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.185" endtime="20201007 00:58:09.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.186" endtime="20201007 00:58:09.186"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.184" endtime="20201007 00:58:09.186"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.187" level="FAIL">'1;0' does not contain '9'</msg>
<status status="FAIL" starttime="20201007 00:58:09.187" endtime="20201007 00:58:09.187"></status>
</kw>
<msg timestamp="20201007 00:58:09.187" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.186" endtime="20201007 00:58:09.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.188" endtime="20201007 00:58:09.188"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.186" endtime="20201007 00:58:09.188"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.189" level="FAIL">'7;3' does not contain '9'</msg>
<status status="FAIL" starttime="20201007 00:58:09.189" endtime="20201007 00:58:09.189"></status>
</kw>
<msg timestamp="20201007 00:58:09.189" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.189" endtime="20201007 00:58:09.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.190" endtime="20201007 00:58:09.190"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.188" endtime="20201007 00:58:09.190"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.191" level="FAIL">'8;4' does not contain '9'</msg>
<status status="FAIL" starttime="20201007 00:58:09.190" endtime="20201007 00:58:09.191"></status>
</kw>
<msg timestamp="20201007 00:58:09.191" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20201007 00:58:09.190" endtime="20201007 00:58:09.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.191" endtime="20201007 00:58:09.191"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.190" endtime="20201007 00:58:09.191"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.192" endtime="20201007 00:58:09.192"></status>
</kw>
<msg timestamp="20201007 00:58:09.192" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20201007 00:58:09.192" endtime="20201007 00:58:09.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.193" endtime="20201007 00:58:09.194"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.193" endtime="20201007 00:58:09.194"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.191" endtime="20201007 00:58:09.194"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.184" endtime="20201007 00:58:09.195"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.183" endtime="20201007 00:58:09.195"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.183" endtime="20201007 00:58:09.195"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.026" endtime="20201007 00:58:09.195"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.025" endtime="20201007 00:58:09.195"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:08.797" endtime="20201007 00:58:09.195"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.197" endtime="20201007 00:58:09.197"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.196" endtime="20201007 00:58:09.198"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:07.490" endtime="20201007 00:58:09.198" critical="yes"></status>
</test>
<test id="s1-t2" name="Realizar Login Com Sucesso">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:09.201" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:09.202" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:09.201" endtime="20201007 00:58:09.202"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:09.203" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:09.203" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:09.203" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:09.202" endtime="20201007 00:58:09.203"></status>
</kw>
<msg timestamp="20201007 00:58:09.203" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:09.201" endtime="20201007 00:58:09.203"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:09.205" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:09.204" endtime="20201007 00:58:09.205"></status>
</kw>
<msg timestamp="20201007 00:58:09.205" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:09.203" endtime="20201007 00:58:09.205"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:09.340" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:09.341" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:09.341" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:09.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.206" endtime="20201007 00:58:09.342"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.342" endtime="20201007 00:58:09.342"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:09.343" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:09.343" endtime="20201007 00:58:09.344"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.344" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:09.344" endtime="20201007 00:58:09.344"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.200" endtime="20201007 00:58:09.344"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.345" endtime="20201007 00:58:09.345"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.345" endtime="20201007 00:58:09.346"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:09.347" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:09.347" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/Login",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c...</msg>
<status status="PASS" starttime="20201007 00:58:09.346" endtime="20201007 00:58:09.348"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:09.348" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/Login",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json"
        },
        "body": {
            "password": "123456",
            "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "document": "97604451829",
            "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "grantType": "cpf"
        },
        "response": {
            "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6Ijk2MTQ2M2QyLTE4YTMtNDM3ZS05YmNlLTIyYzJiMjY3MGUzZiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMTk1OTgyMywiZXhwIjoxNjAxOTc0MjIzLCJpYXQiOjE2MDE5NTk4MjMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.dbONzLx2wRYdI05C1iNovqcy4QWjV8Y9aJLnwb94pvI",
            "refresh_token": "Vpo421x52RgjZUdrNXKRpSiD08iAplFjyYbD1TnKZQ",
            "token_type": "bearer",
            "expires_in": 14400,
            "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "person": {
                "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
                "Name": "Lara Vanessa Louise Monteiro",
                "SocialName": "Lara Vanessa Louise Monteiro",
                "Phone": "83988786800",
                "Cpf": "97604451829",
                "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
                "Birthday": "1986-05-31T00:00:00Z",
                "DateCreated": "2020-07-16T10:53:47Z",
                "DateChanged": "2020-07-16T10:53:47Z",
                "IsActive": true
            }
        }
    }
} </msg>
<msg timestamp="20201007 00:58:09.348" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:09.348" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:09.348" endtime="20201007 00:58:09.348"></status>
</kw>
<msg timestamp="20201007 00:58:09.349" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:09.346" endtime="20201007 00:58:09.349"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:09.350" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:09.349" endtime="20201007 00:58:09.350"></status>
</kw>
<msg timestamp="20201007 00:58:09.350" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:09.349" endtime="20201007 00:58:09.350"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:09.351" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:09.351" endtime="20201007 00:58:09.351"></status>
</kw>
<msg timestamp="20201007 00:58:09.351" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:09.350" endtime="20201007 00:58:09.351"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.351" endtime="20201007 00:58:09.352"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.352" endtime="20201007 00:58:09.352"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.352" endtime="20201007 00:58:09.352"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.353" endtime="20201007 00:58:09.353"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.353" endtime="20201007 00:58:09.354"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:09.722" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:09.722" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjI4MmRhNGVlLTgzMDYtNGZlNy05MWI3LWVhYjNkYzBiYTdmNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA4OSwiZXhwIjoxNjAyMDU3NDg5LCJpYXQiOjE2MDIwNDMwODksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.CR9DzhmOVcPZ4Dn95487PzMilsmrgtit7ov8ogFz-S0",
  "refresh_token": "BfeqUux5AT7BOcXRLUeUZllwd5fnuZzXW76fhsE0",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:09.722" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:09.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.354" endtime="20201007 00:58:09.724"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.724" endtime="20201007 00:58:09.724"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.725" endtime="20201007 00:58:09.725"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.724" endtime="20201007 00:58:09.726"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.726" endtime="20201007 00:58:09.726"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:09.727" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjI4MmRhNGVlLTgzMDYtNGZlNy05MWI3LWVhYjNkYzBiYTdmNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:09.727" endtime="20201007 00:58:09.727"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.728" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjI4MmRhNGVlLTgzMDYtNGZlNy05MWI3LWVhYjNkYzBiYTdmNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:09.727" endtime="20201007 00:58:09.728"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.728" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:09.728" endtime="20201007 00:58:09.728"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.346" endtime="20201007 00:58:09.729"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.729" endtime="20201007 00:58:09.730"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.729" endtime="20201007 00:58:09.730"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.200" endtime="20201007 00:58:09.730"></status>
</kw>
<kw name="Capturar Response e preencher Payload de Login" library="authorizationKWS">
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
<arg>${loginPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:09.733" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:09.732" endtime="20201007 00:58:09.733"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.736" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:09.734" endtime="20201007 00:58:09.736"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.731" endtime="20201007 00:58:09.736"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.731" endtime="20201007 00:58:09.736"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.199" endtime="20201007 00:58:09.737" critical="yes"></status>
</test>
<test id="s1-t3" name="Validando Refresh Token">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:09.742" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:09.743" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:09.742" endtime="20201007 00:58:09.743"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:09.743" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:09.744" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:09.744" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:09.743" endtime="20201007 00:58:09.744"></status>
</kw>
<msg timestamp="20201007 00:58:09.744" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:09.741" endtime="20201007 00:58:09.744"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:09.745" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:09.745" endtime="20201007 00:58:09.745"></status>
</kw>
<msg timestamp="20201007 00:58:09.746" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:09.744" endtime="20201007 00:58:09.746"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:09.862" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:09.862" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:09.863" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:09.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.746" endtime="20201007 00:58:09.864"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.864" endtime="20201007 00:58:09.864"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:09.865" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:09.864" endtime="20201007 00:58:09.865"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.866" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:09.865" endtime="20201007 00:58:09.866"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.741" endtime="20201007 00:58:09.866"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:09.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.867" endtime="20201007 00:58:09.868"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.866" endtime="20201007 00:58:09.868"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:09.870" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:09.871" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:09.869" endtime="20201007 00:58:09.871"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:09.872" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjI4MmRhNGVlLTgzMDYtNGZlNy05MWI3LWVhYjNkYzBiYTdmNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA4OSwiZXhwIjoxNjAyMDU3NDg5LCJpYXQiOjE2MDIwNDMwODksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.CR9DzhmOVcPZ4Dn95487PzMilsmrgtit7ov8ogFz-S0", "refresh_token": "BfeqUux5AT7BOcXRLUeUZllwd5fnuZzXW76fhsE0", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:09.872" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:09.872" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:09.872" endtime="20201007 00:58:09.872"></status>
</kw>
<msg timestamp="20201007 00:58:09.873" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:09.869" endtime="20201007 00:58:09.873"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:09.874" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:09.874" endtime="20201007 00:58:09.874"></status>
</kw>
<msg timestamp="20201007 00:58:09.874" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:09.873" endtime="20201007 00:58:09.875"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:09.876" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:09.876" endtime="20201007 00:58:09.876"></status>
</kw>
<msg timestamp="20201007 00:58:09.876" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:09.875" endtime="20201007 00:58:09.876"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.877" endtime="20201007 00:58:09.877"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.877" endtime="20201007 00:58:09.877"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.878" endtime="20201007 00:58:09.878"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.878" endtime="20201007 00:58:09.878"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:09.878" endtime="20201007 00:58:09.879"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:10.223" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:10.223" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U",
  "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:10.223" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:10.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:09.879" endtime="20201007 00:58:10.225"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.226" endtime="20201007 00:58:10.227"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.228" endtime="20201007 00:58:10.229"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.227" endtime="20201007 00:58:10.229"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.230" endtime="20201007 00:58:10.231"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:10.233" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:10.232" endtime="20201007 00:58:10.233"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.234" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:10.233" endtime="20201007 00:58:10.234"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.236" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:10.235" endtime="20201007 00:58:10.236"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.868" endtime="20201007 00:58:10.237"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.239" endtime="20201007 00:58:10.240"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.237" endtime="20201007 00:58:10.240"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.741" endtime="20201007 00:58:10.240"></status>
</kw>
<kw name="Enviar requisição de Refresh Token" library="authorizationKWS">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["refresh_token"]}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20201007 00:58:10.244" level="INFO">${token} = 79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE</msg>
<status status="PASS" starttime="20201007 00:58:10.243" endtime="20201007 00:58:10.244"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:10.246" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:10.245" endtime="20201007 00:58:10.246"></status>
</kw>
<msg timestamp="20201007 00:58:10.247" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:10.244" endtime="20201007 00:58:10.247"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>token=${token}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201007 00:58:10.248" level="INFO">${body} = {'token': '79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE'}</msg>
<status status="PASS" starttime="20201007 00:58:10.247" endtime="20201007 00:58:10.248"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/refreshToken</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:10.624" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/refreshToken 
 path_url=/authentication/refreshToken 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '54'} 
 body={"token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE"} 
 </msg>
<msg timestamp="20201007 00:58:10.624" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/refreshToken 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjcxNTM5NTNiLTViNTAtNDU1Yi04NjZiLTM2YjBiNzAxNGE4ZiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.hCRhd76N9Tnj1vqst878ioyPFKiavmu6Iv1K-N8aDBI",
  "refresh_token": "aXwizdKRw6gz2AvpwsF6QOJ5xN8n8Z3cqG0IvwuNM",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:10.624" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:10.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.248" endtime="20201007 00:58:10.625"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.626" endtime="20201007 00:58:10.627"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.625" endtime="20201007 00:58:10.627"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.627" endtime="20201007 00:58:10.628"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.242" endtime="20201007 00:58:10.628"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.629" endtime="20201007 00:58:10.630"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.629" endtime="20201007 00:58:10.630"></status>
</kw>
<kw name="Capturar Response e preencher Payload de Login" library="authorizationKWS">
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
<arg>${loginPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:10.633" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:10.632" endtime="20201007 00:58:10.633"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.635" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:10.634" endtime="20201007 00:58:10.635"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.632" endtime="20201007 00:58:10.635"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.631" endtime="20201007 00:58:10.635"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:09.740" endtime="20201007 00:58:10.636" critical="yes"></status>
</test>
<test id="s1-t4" name="Trocar senha por uma já utilizada">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:10.643" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:10.644" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:10.642" endtime="20201007 00:58:10.644"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:10.645" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:10.645" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:10.645" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:10.644" endtime="20201007 00:58:10.645"></status>
</kw>
<msg timestamp="20201007 00:58:10.646" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:10.641" endtime="20201007 00:58:10.646"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:10.647" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:10.647" endtime="20201007 00:58:10.647"></status>
</kw>
<msg timestamp="20201007 00:58:10.647" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:10.646" endtime="20201007 00:58:10.647"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:10.827" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:10.827" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:10.827" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:10.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.647" endtime="20201007 00:58:10.828"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.829" endtime="20201007 00:58:10.830"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:10.831" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:10.830" endtime="20201007 00:58:10.831"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.831" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:10.831" endtime="20201007 00:58:10.831"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.640" endtime="20201007 00:58:10.831"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:10.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.832" endtime="20201007 00:58:10.833"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.832" endtime="20201007 00:58:10.833"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:10.835" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:10.835" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:10.834" endtime="20201007 00:58:10.835"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:10.836" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U", "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:10.836" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:10.836" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:10.836" endtime="20201007 00:58:10.836"></status>
</kw>
<msg timestamp="20201007 00:58:10.837" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:10.834" endtime="20201007 00:58:10.837"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:10.840" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:10.839" endtime="20201007 00:58:10.840"></status>
</kw>
<msg timestamp="20201007 00:58:10.841" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:10.838" endtime="20201007 00:58:10.841"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:10.843" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:10.842" endtime="20201007 00:58:10.844"></status>
</kw>
<msg timestamp="20201007 00:58:10.844" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:10.841" endtime="20201007 00:58:10.844"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.845" endtime="20201007 00:58:10.845"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.846" endtime="20201007 00:58:10.846"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.847" endtime="20201007 00:58:10.847"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.848" endtime="20201007 00:58:10.848"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:10.849" endtime="20201007 00:58:10.849"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:11.375" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:11.376" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjcxYTdjMjFhLTQ4ZjctNDY5MC1iNmU2LTJhY2ExOTBmMWIyZSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MSwiZXhwIjoxNjAyMDU3NDkxLCJpYXQiOjE2MDIwNDMwOTEsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.IbY12FLnNiuG1kxtQRni6IZptm7sRSSuSJ-Ydluxn4M",
  "refresh_token": "bODInZYCB5apASiWw0AGBAnXtJdSfAzFeh4oCtRT5I",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:11.376" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:11.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:10.849" endtime="20201007 00:58:11.377"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.378" endtime="20201007 00:58:11.379"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.380" endtime="20201007 00:58:11.382"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.379" endtime="20201007 00:58:11.382"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:11.382" endtime="20201007 00:58:11.383"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:11.385" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjcxYTdjMjFhLTQ4ZjctNDY5MC1iNmU2LTJhY2ExOTBmMWIyZSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:11.384" endtime="20201007 00:58:11.385"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.386" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjcxYTdjMjFhLTQ4ZjctNDY5MC1iNmU2LTJhY2ExOTBmMWIyZSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:11.385" endtime="20201007 00:58:11.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.389" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:11.387" endtime="20201007 00:58:11.389"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.833" endtime="20201007 00:58:11.389"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.391" endtime="20201007 00:58:11.392"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.390" endtime="20201007 00:58:11.392"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.640" endtime="20201007 00:58:11.393"></status>
</kw>
<kw name="Enviar requisição de troca de senha usando &quot;${PASSWORD}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/chancePassword.json</arg>
</arguments>
<assign>
<var>${chagePWDPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:11.397" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\chancePassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\chancePassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:11.398" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "792...</msg>
<status status="PASS" starttime="20201007 00:58:11.396" endtime="20201007 00:58:11.398"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:11.399" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Success": true,
            "Message": "Processo finalizado com sucesso"
        }
    },
    "Validate return code 400": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Property": "400",
            "Message": "Essa senha já foi usada, crie uma diferente"
        }
    }
} </msg>
<msg timestamp="20201007 00:58:11.400" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:11.400" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:11.399" endtime="20201007 00:58:11.400"></status>
</kw>
<msg timestamp="20201007 00:58:11.401" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:11.395" endtime="20201007 00:58:11.401"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPassword</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:11.401" endtime="20201007 00:58:11.402"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPasswordConfirmation</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:11.403" endtime="20201007 00:58:11.404"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:11.405" endtime="20201007 00:58:11.407"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:11.411" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:11.411" endtime="20201007 00:58:11.412"></status>
</kw>
<msg timestamp="20201007 00:58:11.412" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:11.409" endtime="20201007 00:58:11.412"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:11.415" level="INFO">${my_Body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20201007 00:58:11.414" endtime="20201007 00:58:11.415"></status>
</kw>
<msg timestamp="20201007 00:58:11.416" level="INFO">${body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20201007 00:58:11.413" endtime="20201007 00:58:11.416"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/changePassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:11.916" level="INFO">PUT Request : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 path_url=/authentication/changePassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjcxYTdjMjFhLTQ4ZjctNDY5MC1iNmU2LTJhY2ExOTBmMWIyZSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MSwiZXhwIjoxNjAyMDU3NDkxLCJpYXQiOjE2MDIwNDMwOTEsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.IbY12FLnNiuG1kxtQRni6IZptm7sRSSuSJ-Ydluxn4M', 'Content-Length': '62'} 
 body={"newPassword": "123456", "newPasswordConfirmation": "123456"} 
 </msg>
<msg timestamp="20201007 00:58:11.917" level="INFO">PUT Response : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 status=400, reason=Bad Request 
 body=[
  {
    "Property": "400",
    "Message": "Essa senha já foi usada, crie uma diferente"
  }
] 
 </msg>
<msg timestamp="20201007 00:58:11.917" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:11.918" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.416" endtime="20201007 00:58:11.918"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.918" endtime="20201007 00:58:11.919"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.918" endtime="20201007 00:58:11.919"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.920" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.919" endtime="20201007 00:58:11.920"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.394" endtime="20201007 00:58:11.920"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>400</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:11.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.922" endtime="20201007 00:58:11.922"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.921" endtime="20201007 00:58:11.923"></status>
</kw>
<kw name="Conferir a mensagem de erro &quot;Essa senha já foi usada, crie uma diferente&quot;" library="authorizationKWS">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.json()[0]["Message"]}</arg>
</arguments>
<assign>
<var>${msgString}</var>
</assign>
<msg timestamp="20201007 00:58:11.926" level="INFO">${msgString} = Essa senha já foi usada, crie uma diferente</msg>
<status status="PASS" starttime="20201007 00:58:11.925" endtime="20201007 00:58:11.926"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${msgString}</arg>
<arg>${msgExpected}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:11.926" endtime="20201007 00:58:11.927"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.924" endtime="20201007 00:58:11.927"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:10.639" endtime="20201007 00:58:11.928" critical="yes"></status>
</test>
<test id="s1-t5" name="Trocar senha do usuário com Sucesso">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:11.934" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:11.934" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:11.933" endtime="20201007 00:58:11.934"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:11.935" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:11.935" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:11.935" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:11.935" endtime="20201007 00:58:11.935"></status>
</kw>
<msg timestamp="20201007 00:58:11.936" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:11.932" endtime="20201007 00:58:11.936"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:11.937" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:11.937" endtime="20201007 00:58:11.937"></status>
</kw>
<msg timestamp="20201007 00:58:11.938" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:11.936" endtime="20201007 00:58:11.939"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:12.074" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:12.075" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:12.075" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:12.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:11.939" endtime="20201007 00:58:12.078"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:12.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:12.079" endtime="20201007 00:58:12.079"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:12.080" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:12.079" endtime="20201007 00:58:12.080"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:12.080" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:12.080" endtime="20201007 00:58:12.080"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.931" endtime="20201007 00:58:12.081"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:12.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:12.081" endtime="20201007 00:58:12.082"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:12.081" endtime="20201007 00:58:12.082"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:12.083" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:12.084" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:12.083" endtime="20201007 00:58:12.084"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:12.084" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U", "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:12.085" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:12.085" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:12.084" endtime="20201007 00:58:12.085"></status>
</kw>
<msg timestamp="20201007 00:58:12.085" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:12.083" endtime="20201007 00:58:12.085"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:12.086" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:12.086" endtime="20201007 00:58:12.086"></status>
</kw>
<msg timestamp="20201007 00:58:12.086" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:12.085" endtime="20201007 00:58:12.086"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:12.088" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:12.087" endtime="20201007 00:58:12.088"></status>
</kw>
<msg timestamp="20201007 00:58:12.088" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:12.087" endtime="20201007 00:58:12.088"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:12.088" endtime="20201007 00:58:12.089"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:12.089" endtime="20201007 00:58:12.089"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:12.089" endtime="20201007 00:58:12.090"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:12.090" endtime="20201007 00:58:12.091"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:12.091" endtime="20201007 00:58:12.092"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:13.250" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:13.250" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImEzMTdkM2EyLTI4NzUtNDkzZS04ZjhhLWE1ZGE0YjFkOWRkNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MywiZXhwIjoxNjAyMDU3NDkzLCJpYXQiOjE2MDIwNDMwOTMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.PDgA9PUFlRkgQCjdzCJEoUklrs1IDFW-bw4sa9Hhb9k",
  "refresh_token": "kZUswj3QTLbG6ZXXOOv9naCYQ4UoCx2UZ3VT9vKHk",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:13.250" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:13.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:12.093" endtime="20201007 00:58:13.251"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.252" endtime="20201007 00:58:13.252"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.253" endtime="20201007 00:58:13.254"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.252" endtime="20201007 00:58:13.254"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.255" endtime="20201007 00:58:13.256"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:13.257" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImEzMTdkM2EyLTI4NzUtNDkzZS04ZjhhLWE1ZGE0YjFkOWRkNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:13.256" endtime="20201007 00:58:13.257"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.259" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImEzMTdkM2EyLTI4NzUtNDkzZS04ZjhhLWE1ZGE0YjFkOWRkNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:13.258" endtime="20201007 00:58:13.260"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.261" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:13.260" endtime="20201007 00:58:13.261"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:12.082" endtime="20201007 00:58:13.261"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.261" endtime="20201007 00:58:13.264"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.261" endtime="20201007 00:58:13.264"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:11.931" endtime="20201007 00:58:13.264"></status>
</kw>
<kw name="Enviar requisição de troca de senha usando &quot;123456&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/chancePassword.json</arg>
</arguments>
<assign>
<var>${chagePWDPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:13.267" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\chancePassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\chancePassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:13.267" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "792...</msg>
<status status="PASS" starttime="20201007 00:58:13.266" endtime="20201007 00:58:13.267"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:13.268" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Success": true,
            "Message": "Processo finalizado com sucesso"
        }
    },
    "Validate return code 400": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Property": "400",
            "Message": "Essa senha já foi usada, crie uma diferente"
        }
    }
} </msg>
<msg timestamp="20201007 00:58:13.268" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:13.268" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:13.267" endtime="20201007 00:58:13.268"></status>
</kw>
<msg timestamp="20201007 00:58:13.268" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:13.266" endtime="20201007 00:58:13.268"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPassword</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.268" endtime="20201007 00:58:13.269"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPasswordConfirmation</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.269" endtime="20201007 00:58:13.270"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.270" endtime="20201007 00:58:13.271"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:13.273" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:13.272" endtime="20201007 00:58:13.273"></status>
</kw>
<msg timestamp="20201007 00:58:13.273" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:13.271" endtime="20201007 00:58:13.273"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:13.274" level="INFO">${my_Body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20201007 00:58:13.274" endtime="20201007 00:58:13.274"></status>
</kw>
<msg timestamp="20201007 00:58:13.274" level="INFO">${body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20201007 00:58:13.273" endtime="20201007 00:58:13.274"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/changePassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:13.380" level="INFO">PUT Request : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 path_url=/authentication/changePassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImEzMTdkM2EyLTI4NzUtNDkzZS04ZjhhLWE1ZGE0YjFkOWRkNyIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MywiZXhwIjoxNjAyMDU3NDkzLCJpYXQiOjE2MDIwNDMwOTMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.PDgA9PUFlRkgQCjdzCJEoUklrs1IDFW-bw4sa9Hhb9k', 'Content-Length': '62'} 
 body={"newPassword": "123456", "newPasswordConfirmation": "123456"} 
 </msg>
<msg timestamp="20201007 00:58:13.381" level="INFO">PUT Response : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 status=400, reason=Bad Request 
 body=[
  {
    "Property": "400",
    "Message": "Essa senha já foi usada, crie uma diferente"
  }
] 
 </msg>
<msg timestamp="20201007 00:58:13.381" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:13.382" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.275" endtime="20201007 00:58:13.382"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.383" endtime="20201007 00:58:13.383"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.382" endtime="20201007 00:58:13.383"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.384" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.383" endtime="20201007 00:58:13.384"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.265" endtime="20201007 00:58:13.384"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201007 00:58:13.386" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20201007 00:58:13.385" endtime="20201007 00:58:13.386"></status>
</kw>
<status status="FAIL" starttime="20201007 00:58:13.385" endtime="20201007 00:58:13.386"></status>
</kw>
<status status="FAIL" starttime="20201007 00:58:11.930" endtime="20201007 00:58:13.387" critical="yes">400 != 200</status>
</test>
<test id="s1-t6" name="Validando API de solicitação de permiti minha senha via SMS">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:13.393" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:13.393" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:13.392" endtime="20201007 00:58:13.393"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:13.394" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:13.394" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:13.394" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:13.393" endtime="20201007 00:58:13.394"></status>
</kw>
<msg timestamp="20201007 00:58:13.395" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:13.392" endtime="20201007 00:58:13.395"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:13.396" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:13.396" endtime="20201007 00:58:13.396"></status>
</kw>
<msg timestamp="20201007 00:58:13.396" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:13.395" endtime="20201007 00:58:13.396"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:13.516" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:13.516" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:13.517" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:13.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.397" endtime="20201007 00:58:13.518"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.518" endtime="20201007 00:58:13.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:13.520" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:13.520" endtime="20201007 00:58:13.520"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.521" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:13.521" endtime="20201007 00:58:13.521"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.391" endtime="20201007 00:58:13.521"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:13.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.522" endtime="20201007 00:58:13.523"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.522" endtime="20201007 00:58:13.523"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:13.525" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:13.525" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:13.524" endtime="20201007 00:58:13.525"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:13.526" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U", "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:13.526" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:13.526" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:13.525" endtime="20201007 00:58:13.526"></status>
</kw>
<msg timestamp="20201007 00:58:13.527" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:13.524" endtime="20201007 00:58:13.527"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:13.530" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:13.529" endtime="20201007 00:58:13.530"></status>
</kw>
<msg timestamp="20201007 00:58:13.530" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:13.527" endtime="20201007 00:58:13.530"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:13.533" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:13.532" endtime="20201007 00:58:13.533"></status>
</kw>
<msg timestamp="20201007 00:58:13.533" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:13.531" endtime="20201007 00:58:13.533"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.533" endtime="20201007 00:58:13.534"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.534" endtime="20201007 00:58:13.534"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.534" endtime="20201007 00:58:13.535"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.535" endtime="20201007 00:58:13.535"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:13.535" endtime="20201007 00:58:13.536"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:14.428" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:14.428" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxMTUyMjJjLWU0N2EtNDJkNS1hODkzLTY4MzYxMGEwNTBmMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MywiZXhwIjoxNjAyMDU3NDkzLCJpYXQiOjE2MDIwNDMwOTMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.2rm_Sxi-C6tPpuEOW_Pw1ZtBHd6R14ChurYHi59W4PA",
  "refresh_token": "xZJlcLULpXvFaaEGLiGV7LgtrPIxRAmMFABAvho6wmQ",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:14.428" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:14.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:13.536" endtime="20201007 00:58:14.429"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:14.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:14.429" endtime="20201007 00:58:14.430"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:14.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:14.430" endtime="20201007 00:58:14.431"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:14.430" endtime="20201007 00:58:14.431"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.431" endtime="20201007 00:58:14.432"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:14.432" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxMTUyMjJjLWU0N2EtNDJkNS1hODkzLTY4MzYxMGEwNTBmMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:14.432" endtime="20201007 00:58:14.432"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:14.433" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxMTUyMjJjLWU0N2EtNDJkNS1hODkzLTY4MzYxMGEwNTBmMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:14.432" endtime="20201007 00:58:14.433"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:14.434" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:14.433" endtime="20201007 00:58:14.434"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.523" endtime="20201007 00:58:14.434"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:14.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:14.435" endtime="20201007 00:58:14.435"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:14.434" endtime="20201007 00:58:14.436"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:13.391" endtime="20201007 00:58:14.436"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;sms&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:14.439" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:14.439" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:14.438" endtime="20201007 00:58:14.440"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:14.440" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUzNGJlZmVkLTNmNzktNDI2ZS1iZWE5LWI0ZGQ1MDNiZmYzYSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMTk1OTgyOSwiZXhwIjoxNjAxOTc0MjI5LCJpYXQiOjE2MDE5NTk4MjksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.TyLKCCPBtiCnwihYEBcxmrtdKvp6U-4kqL5rJm3ptnQ"}, "body": {"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "m****a@g****l.com"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20201007 00:58:14.441" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:14.441" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:14.440" endtime="20201007 00:58:14.441"></status>
</kw>
<msg timestamp="20201007 00:58:14.442" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:14.438" endtime="20201007 00:58:14.442"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.442" endtime="20201007 00:58:14.442"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.442" endtime="20201007 00:58:14.443"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.443" endtime="20201007 00:58:14.443"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.444" endtime="20201007 00:58:14.444"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:14.444" endtime="20201007 00:58:14.445"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:14.446" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:14.446" endtime="20201007 00:58:14.446"></status>
</kw>
<msg timestamp="20201007 00:58:14.446" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:14.445" endtime="20201007 00:58:14.446"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:14.448" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:14.448" endtime="20201007 00:58:14.449"></status>
</kw>
<msg timestamp="20201007 00:58:14.449" level="INFO">${body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:14.447" endtime="20201007 00:58:14.449"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:15.464" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxMTUyMjJjLWU0N2EtNDJkNS1hODkzLTY4MzYxMGEwNTBmMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MywiZXhwIjoxNjAyMDU3NDkzLCJpYXQiOjE2MDIwNDMwOTMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.2rm_Sxi-C6tPpuEOW_Pw1ZtBHd6R14ChurYHi59W4PA', 'Content-Length': '149'} 
 body={"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20201007 00:58:15.465" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "(83) 9****-**00"
} 
 </msg>
<msg timestamp="20201007 00:58:15.465" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:15.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:14.450" endtime="20201007 00:58:15.466"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.466" endtime="20201007 00:58:15.466"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.467" endtime="20201007 00:58:15.467"></status>
</kw>
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:15.469" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:15.469" endtime="20201007 00:58:15.469"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.472" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:15.470" endtime="20201007 00:58:15.472"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.467" endtime="20201007 00:58:15.473"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:14.437" endtime="20201007 00:58:15.473"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.476" endtime="20201007 00:58:15.478"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.475" endtime="20201007 00:58:15.478"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="PASS" starttime="20201007 00:58:13.390" endtime="20201007 00:58:15.479" critical="yes"></status>
</test>
<test id="s1-t7" name="Validando API de solicitação de permiti minha senha via Email">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:15.485" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:15.486" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:15.485" endtime="20201007 00:58:15.486"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:15.487" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:15.487" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:15.488" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:15.486" endtime="20201007 00:58:15.488"></status>
</kw>
<msg timestamp="20201007 00:58:15.489" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:15.484" endtime="20201007 00:58:15.489"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:15.491" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:15.490" endtime="20201007 00:58:15.491"></status>
</kw>
<msg timestamp="20201007 00:58:15.491" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:15.489" endtime="20201007 00:58:15.491"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:15.803" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:15.803" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:15.803" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:15.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.491" endtime="20201007 00:58:15.804"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.805" endtime="20201007 00:58:15.805"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:15.806" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:15.805" endtime="20201007 00:58:15.806"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.807" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:15.806" endtime="20201007 00:58:15.807"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.484" endtime="20201007 00:58:15.807"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:15.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.808" endtime="20201007 00:58:15.809"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.807" endtime="20201007 00:58:15.809"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:15.811" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:15.812" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:15.810" endtime="20201007 00:58:15.812"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:15.813" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U", "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:15.813" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:15.813" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:15.812" endtime="20201007 00:58:15.813"></status>
</kw>
<msg timestamp="20201007 00:58:15.814" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:15.809" endtime="20201007 00:58:15.814"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:15.817" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:15.816" endtime="20201007 00:58:15.817"></status>
</kw>
<msg timestamp="20201007 00:58:15.817" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:15.814" endtime="20201007 00:58:15.817"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:15.819" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:15.819" endtime="20201007 00:58:15.819"></status>
</kw>
<msg timestamp="20201007 00:58:15.820" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:15.818" endtime="20201007 00:58:15.820"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.820" endtime="20201007 00:58:15.822"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.822" endtime="20201007 00:58:15.823"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.823" endtime="20201007 00:58:15.823"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.823" endtime="20201007 00:58:15.824"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:15.824" endtime="20201007 00:58:15.824"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:16.166" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:16.166" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxZmUzMTVmLTZkZTMtNDRlZS04ZTI1LTk5NDI5NTA5YjVjOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5NiwiZXhwIjoxNjAyMDU3NDk2LCJpYXQiOjE2MDIwNDMwOTYsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.CluErIVOCyg15xz6U9uXJ1yt2PdS884q3HQDTRmRjG4",
  "refresh_token": "jGRbHcI2hcMSungalVj3BDJTF8YIDbWYDSLAIq3wA",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:16.166" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:16.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:15.824" endtime="20201007 00:58:16.167"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:16.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:16.167" endtime="20201007 00:58:16.168"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:16.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:16.168" endtime="20201007 00:58:16.169"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:16.168" endtime="20201007 00:58:16.169"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.170" endtime="20201007 00:58:16.171"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:16.173" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxZmUzMTVmLTZkZTMtNDRlZS04ZTI1LTk5NDI5NTA5YjVjOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:16.171" endtime="20201007 00:58:16.173"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:16.174" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxZmUzMTVmLTZkZTMtNDRlZS04ZTI1LTk5NDI5NTA5YjVjOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:16.173" endtime="20201007 00:58:16.174"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:16.175" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:16.174" endtime="20201007 00:58:16.175"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.809" endtime="20201007 00:58:16.175"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:16.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:16.177" endtime="20201007 00:58:16.178"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:16.176" endtime="20201007 00:58:16.178"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:15.483" endtime="20201007 00:58:16.179"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;email&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:16.182" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:16.183" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:16.181" endtime="20201007 00:58:16.183"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:16.185" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxMTUyMjJjLWU0N2EtNDJkNS1hODkzLTY4MzYxMGEwNTBmMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MywiZXhwIjoxNjAyMDU3NDkzLCJpYXQiOjE2MDIwNDMwOTMsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.2rm_Sxi-C6tPpuEOW_Pw1ZtBHd6R14ChurYHi59W4PA"}, "body": {"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "(83) 9****-**00"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20201007 00:58:16.185" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:16.186" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:16.184" endtime="20201007 00:58:16.186"></status>
</kw>
<msg timestamp="20201007 00:58:16.187" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:16.180" endtime="20201007 00:58:16.187"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.187" endtime="20201007 00:58:16.189"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.189" endtime="20201007 00:58:16.190"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.190" endtime="20201007 00:58:16.190"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.191" endtime="20201007 00:58:16.191"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:16.191" endtime="20201007 00:58:16.192"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:16.195" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:16.194" endtime="20201007 00:58:16.195"></status>
</kw>
<msg timestamp="20201007 00:58:16.195" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:16.193" endtime="20201007 00:58:16.195"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:16.197" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:16.196" endtime="20201007 00:58:16.197"></status>
</kw>
<msg timestamp="20201007 00:58:16.197" level="INFO">${body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:16.196" endtime="20201007 00:58:16.197"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:19.193" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxZmUzMTVmLTZkZTMtNDRlZS04ZTI1LTk5NDI5NTA5YjVjOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5NiwiZXhwIjoxNjAyMDU3NDk2LCJpYXQiOjE2MDIwNDMwOTYsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.CluErIVOCyg15xz6U9uXJ1yt2PdS884q3HQDTRmRjG4', 'Content-Length': '151'} 
 body={"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20201007 00:58:19.193" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "m****a@g****l.com"
} 
 </msg>
<msg timestamp="20201007 00:58:19.193" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:19.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:16.197" endtime="20201007 00:58:19.194"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.194" endtime="20201007 00:58:19.195"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.195" endtime="20201007 00:58:19.196"></status>
</kw>
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:19.197" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:19.197" endtime="20201007 00:58:19.197"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.199" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:19.197" endtime="20201007 00:58:19.199"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.196" endtime="20201007 00:58:19.199"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:16.179" endtime="20201007 00:58:19.199"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.201" endtime="20201007 00:58:19.201"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.200" endtime="20201007 00:58:19.202"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="PASS" starttime="20201007 00:58:15.481" endtime="20201007 00:58:19.202" critical="yes"></status>
</test>
<test id="s1-t8" name="Validando API de verificação que solicitação de minha senha já foi solicada para envio por SMS">
<kw name="Login Sucess" library="base">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/validateCPF.json</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:19.209" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:19.209" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20201007 00:58:19.208" endtime="20201007 00:58:19.209"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:19.210" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20201007 00:58:19.210" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:19.210" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:19.210" endtime="20201007 00:58:19.210"></status>
</kw>
<msg timestamp="20201007 00:58:19.210" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20201007 00:58:19.208" endtime="20201007 00:58:19.210"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:19.211" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:19.211" endtime="20201007 00:58:19.211"></status>
</kw>
<msg timestamp="20201007 00:58:19.212" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20201007 00:58:19.210" endtime="20201007 00:58:19.212"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:19.329" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20201007 00:58:19.329" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20201007 00:58:19.330" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:19.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.212" endtime="20201007 00:58:19.330"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.331" endtime="20201007 00:58:19.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20201007 00:58:19.334" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:19.332" endtime="20201007 00:58:19.334"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.334" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20201007 00:58:19.334" endtime="20201007 00:58:19.334"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.208" endtime="20201007 00:58:19.334"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.335" endtime="20201007 00:58:19.336"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.335" endtime="20201007 00:58:19.336"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/login.json</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:19.339" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:19.340" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20201007 00:58:19.337" endtime="20201007 00:58:19.340"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:19.340" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUwNjhhMDQ2LTliZWUtNDU5Mi1iYjg4LTlmMjE3ZTk4OWQ1MCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5MCwiZXhwIjoxNjAyMDU3NDkwLCJpYXQiOjE2MDIwNDMwOTAsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.41USDmpEbuXGl_ZJq5GbKqXFYgI6qTUD3DFFHyc8-5U", "refresh_token": "79Ots2sIyYGnJq5yEXAm1D7S1fsapARZxN501bXlE", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20201007 00:58:19.340" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:19.340" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:19.340" endtime="20201007 00:58:19.340"></status>
</kw>
<msg timestamp="20201007 00:58:19.341" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:19.336" endtime="20201007 00:58:19.341"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:19.343" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:19.342" endtime="20201007 00:58:19.343"></status>
</kw>
<msg timestamp="20201007 00:58:19.344" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20201007 00:58:19.341" endtime="20201007 00:58:19.344"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:19.345" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:19.344" endtime="20201007 00:58:19.345"></status>
</kw>
<msg timestamp="20201007 00:58:19.345" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20201007 00:58:19.344" endtime="20201007 00:58:19.345"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.345" endtime="20201007 00:58:19.346"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.346" endtime="20201007 00:58:19.346"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.346" endtime="20201007 00:58:19.346"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.347" endtime="20201007 00:58:19.347"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.347" endtime="20201007 00:58:19.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:19.772" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20201007 00:58:19.772" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5OSwiZXhwIjoxNjAyMDU3NDk5LCJpYXQiOjE2MDIwNDMwOTksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.gKUOWua7rBnSbhrIOzEGrCRWGkn1t7VDHD_Njnn6v5s",
  "refresh_token": "yXsA0vLlF1XDoV5HyorLjZSuhp3LIr3ptDwKl1ltbI",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20201007 00:58:19.772" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:19.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.347" endtime="20201007 00:58:19.774"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.774" endtime="20201007 00:58:19.775"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.777" endtime="20201007 00:58:19.778"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.776" endtime="20201007 00:58:19.779"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.779" endtime="20201007 00:58:19.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20201007 00:58:19.782" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:19.781" endtime="20201007 00:58:19.782"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.784" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20201007 00:58:19.783" endtime="20201007 00:58:19.784"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.786" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20201007 00:58:19.784" endtime="20201007 00:58:19.786"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.336" endtime="20201007 00:58:19.787"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:19.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.790" endtime="20201007 00:58:19.791"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.788" endtime="20201007 00:58:19.792"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.207" endtime="20201007 00:58:19.792"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;sms&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:19.797" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:19.798" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:19.796" endtime="20201007 00:58:19.798"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:19.799" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjAxZmUzMTVmLTZkZTMtNDRlZS04ZTI1LTk5NDI5NTA5YjVjOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5NiwiZXhwIjoxNjAyMDU3NDk2LCJpYXQiOjE2MDIwNDMwOTYsImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.CluErIVOCyg15xz6U9uXJ1yt2PdS884q3HQDTRmRjG4"}, "body": {"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "m****a@g****l.com"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20201007 00:58:19.800" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:19.800" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:19.798" endtime="20201007 00:58:19.800"></status>
</kw>
<msg timestamp="20201007 00:58:19.801" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:19.794" endtime="20201007 00:58:19.802"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.802" endtime="20201007 00:58:19.805"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.806" endtime="20201007 00:58:19.810"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.811" endtime="20201007 00:58:19.812"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.812" endtime="20201007 00:58:19.813"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:19.814" endtime="20201007 00:58:19.815"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:19.817" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:19.816" endtime="20201007 00:58:19.817"></status>
</kw>
<msg timestamp="20201007 00:58:19.818" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:19.815" endtime="20201007 00:58:19.818"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:19.821" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:19.820" endtime="20201007 00:58:19.822"></status>
</kw>
<msg timestamp="20201007 00:58:19.824" level="INFO">${body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:19.818" endtime="20201007 00:58:19.825"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:20.337" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5OSwiZXhwIjoxNjAyMDU3NDk5LCJpYXQiOjE2MDIwNDMwOTksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.gKUOWua7rBnSbhrIOzEGrCRWGkn1t7VDHD_Njnn6v5s', 'Content-Length': '149'} 
 body={"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20201007 00:58:20.338" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "(83) 9****-**00"
} 
 </msg>
<msg timestamp="20201007 00:58:20.338" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:20.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:19.826" endtime="20201007 00:58:20.339"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:20.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:20.339" endtime="20201007 00:58:20.340"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.340" endtime="20201007 00:58:20.340"></status>
</kw>
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:20.341" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:20.341" endtime="20201007 00:58:20.341"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:20.343" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:20.341" endtime="20201007 00:58:20.343"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:20.340" endtime="20201007 00:58:20.343"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:19.793" endtime="20201007 00:58:20.343"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:20.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201007 00:58:20.345" endtime="20201007 00:58:20.346"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:20.344" endtime="20201007 00:58:20.347"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;email&quot;" library="authorizationKWS">
<kw name="Get Payload" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20201007 00:58:20.349" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20201007 00:58:20.350" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:20.348" endtime="20201007 00:58:20.350"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${newPayload}</var>
</assign>
<msg timestamp="20201007 00:58:20.350" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5OSwiZXhwIjoxNjAyMDU3NDk5LCJpYXQiOjE2MDIwNDMwOTksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.gKUOWua7rBnSbhrIOzEGrCRWGkn1t7VDHD_Njnn6v5s"}, "body": {"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "(83) 9****-**00"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20201007 00:58:20.351" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20201007 00:58:20.351" level="INFO">${newPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:20.350" endtime="20201007 00:58:20.351"></status>
</kw>
<msg timestamp="20201007 00:58:20.351" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20201007 00:58:20.348" endtime="20201007 00:58:20.352"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.352" endtime="20201007 00:58:20.352"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.353" endtime="20201007 00:58:20.354"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.355" endtime="20201007 00:58:20.356"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.356" endtime="20201007 00:58:20.356"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:20.356" endtime="20201007 00:58:20.357"></status>
</kw>
<kw name="Get Headers By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20201007 00:58:20.358" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:20.358" endtime="20201007 00:58:20.358"></status>
</kw>
<msg timestamp="20201007 00:58:20.358" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20201007 00:58:20.357" endtime="20201007 00:58:20.358"></status>
</kw>
<kw name="Get Body By Payload" library="resourceAPI">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20201007 00:58:20.359" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:20.359" endtime="20201007 00:58:20.359"></status>
</kw>
<msg timestamp="20201007 00:58:20.360" level="INFO">${body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20201007 00:58:20.358" endtime="20201007 00:58:20.360"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20201007 00:58:21.829" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjNkMmI1Mjk2LTJlZTQtNGJiMi05YzUzLWUwOTAyOTc2NTQwMCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IjYwODUwMjI5MDAwMTQ3IiwiUGxhdGZvcm1JZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBlcnNvbklkIjoiNGM3ZGQ1ZTctYWNmMC00ZGM1LTlhZTMtMzE3ZDMwNWRmNWQ0IiwiQ3BmIjoiOTc2MDQ0NTE4MjkiLCJQaG9uZSI6IjgzOTg4Nzg2ODAwIiwiUGhvdG8iOiIiLCJzdWIiOiJMYXJhIFZhbmVzc2EgTG91aXNlIE1vbnRlaXJvIiwicm9sZSI6IkFkbWluaXN0cmF0b3IiLCJwZXJtaXNzaW9ucyI6WyJBZG1pbmlzdHJhdG9yLVJlYWQiLCJBZG1pbmlzdHJhdG9yLVdyaXRlIiwiQWRtaW5pc3RyYXRvci1SZXBvcnQiLCJBZG1pbmlzdHJhdG9yLURlbGV0ZSIsIkFkbWluaXN0cmF0b3ItVXBkYXRlIl0sIklzc3VlcnMiOlsie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODQsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6MyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjU3LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo2NSxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODYsXCJBZmZpbml0eUdyb3VwSWRcIjowfSIsIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg1LFwiQWZmaW5pdHlHcm91cElkXCI6Mn0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Il0sIm5iZiI6MTYwMjA0MzA5OSwiZXhwIjoxNjAyMDU3NDk5LCJpYXQiOjE2MDIwNDMwOTksImlzcyI6IkJJWi1BVVRILUFQSSIsImF1ZCI6IkJJWi1FQ09TWVNURU0ifQ.gKUOWua7rBnSbhrIOzEGrCRWGkn1t7VDHD_Njnn6v5s', 'Content-Length': '151'} 
 body={"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20201007 00:58:21.829" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "m****a@g****l.com"
} 
 </msg>
<msg timestamp="20201007 00:58:21.830" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20201007 00:58:21.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:20.360" endtime="20201007 00:58:21.831"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20201007 00:58:21.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201007 00:58:21.831" endtime="20201007 00:58:21.832"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20201007 00:58:21.832" endtime="20201007 00:58:21.833"></status>
</kw>
<kw name="Update JsonFile" library="resourceAPI">
<arguments>
<arg>/authentication/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20201007 00:58:21.834" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20201007 00:58:21.834" endtime="20201007 00:58:21.834"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20201007 00:58:21.837" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\authentication\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20201007 00:58:21.834" endtime="20201007 00:58:21.837"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:21.833" endtime="20201007 00:58:21.837"></status>
</kw>
<status status="PASS" starttime="20201007 00:58:20.347" endtime="20201007 00:58:21.838"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>400</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20201007 00:58:21.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201007 00:58:21.841" level="FAIL">200 != 400</msg>
<status status="FAIL" starttime="20201007 00:58:21.840" endtime="20201007 00:58:21.841"></status>
</kw>
<status status="FAIL" starttime="20201007 00:58:21.839" endtime="20201007 00:58:21.841"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="FAIL" starttime="20201007 00:58:19.205" endtime="20201007 00:58:21.842" critical="yes">200 != 400</status>
</test>
<doc>Documentation of API Tests Suites</doc>
<status status="FAIL" starttime="20201007 00:58:07.006" endtime="20201007 00:58:21.850"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="2">Critical Tests</stat>
<stat pass="6" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="1">wip</stat>
</tag>
<suite>
<stat pass="6" fail="2" id="s1" name="authorizationAPI">authorizationAPI</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
