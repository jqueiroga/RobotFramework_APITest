<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20200815 00:25:13.001" rpa="false">
<suite id="s1" name="authorizationAPI" source="C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\tests\authorizationAPI.robot">
<kw name="Conectar a bizSandboxAPI" library="authorizationKWS" type="setup">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>${URL_BASE_API}</arg>
</arguments>
<msg timestamp="20200815 00:25:14.340" level="INFO">Creating Session using : alias=bizSandboxAPI, url=https://sandbox-code.biz.com.br, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200815 00:25:14.337" endtime="20200815 00:25:14.340"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:14.336" endtime="20200815 00:25:14.340"></status>
</kw>
<test id="s1-t1" name="Loading Login Screen">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:14.342" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:14.344" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:14.342" endtime="20200815 00:25:14.344"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:14.345" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:14.345" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:14.346" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:14.344" endtime="20200815 00:25:14.346"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:14.346" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:14.346" endtime="20200815 00:25:14.346"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:14.342" endtime="20200815 00:25:14.347"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:14.348" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:14.347" endtime="20200815 00:25:14.348"></status>
</kw>
<msg timestamp="20200815 00:25:14.348" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:14.347" endtime="20200815 00:25:14.348"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:15.672" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:15.672" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:15.673" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:15.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:14.348" endtime="20200815 00:25:15.673"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:15.674" endtime="20200815 00:25:15.674"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:15.675" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:15.675" endtime="20200815 00:25:15.676"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.677" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:15.676" endtime="20200815 00:25:15.677"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:14.342" endtime="20200815 00:25:15.677"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:15.678" endtime="20200815 00:25:15.678"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.677" endtime="20200815 00:25:15.679"></status>
</kw>
<kw name="Carregar os UUIDs do Virtual Keyboard" library="authorizationKWS">
<kw name="Get Keyboard Payload" library="authorizationKWS">
<arguments>
<arg>/virtualKeyboard/virtualKeyboard.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:15.681" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\virtualKeyboard\virtualKeyboard.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\virtualKeyboard\virtualKeyboard.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:15.684" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/{{user_id}}/keyboard",
        "tipo": "GET",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key":...</msg>
<status status="PASS" starttime="20200815 00:25:15.681" endtime="20200815 00:25:15.684"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${keyboardPayload}</var>
</assign>
<msg timestamp="20200815 00:25:15.684" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/{{user_id}}/keyboard",
        "tipo": "GET",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": [
            {
                "Label": "7;3",
                "Value": "a314a175-0c8b-409f-ab39-af468526c0ba"
            },
            {
                "Label": "1;0",
                "Value": "6ea1463e-572a-4976-99fa-6bcdb6aab389"
            },
            {
                "Label": "8;4",
                "Value": "4f1b361d-9afc-4466-88a2-961ab3178bbb"
            },
            {
                "Label": "9;5",
                "Value": "d01837ae-29ee-49d4-8b6b-aaeec1357eaa"
            },
            {
                "Label": "6;2",
                "Value": "392b79d2-9175-418e-8d04-270709af02e4"
            }
        ]
    }
} </msg>
<msg timestamp="20200815 00:25:15.684" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:15.685" level="INFO">${keyboardPayload} = {'Validate return code 200': {'url': '/authentication/{{user_id}}/keyboard', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}, 'body': '', '...</msg>
<status status="PASS" starttime="20200815 00:25:15.684" endtime="20200815 00:25:15.685"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${keyboardPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.686" level="INFO">${keyboardPayload} = {'Validate return code 200': {'url': '/authentication/{{user_id}}/keyboard', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}, 'body': '', '...</msg>
<status status="PASS" starttime="20200815 00:25:15.685" endtime="20200815 00:25:15.686"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.680" endtime="20200815 00:25:15.686"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${keyboardPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:15.688" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:15.687" endtime="20200815 00:25:15.688"></status>
</kw>
<msg timestamp="20200815 00:25:15.689" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:15.687" endtime="20200815 00:25:15.689"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${USER_ID}/keyboard</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:15.832" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 path_url=/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:15.832" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4/keyboard 
 status=200, reason=OK 
 body=[
  {
    "Label": "6;2",
    "Value": "392b79d2-9175-418e-8d04-270709af02e4"
  },
  {
    "Label": "9;5",
    "Value": "d01837ae-29ee-49d4-8b6b-aaeec1357eaa"
  },
  {
    "Label": "1;0",
    "Value": "6ea1463e-572a-4976-99fa-6bcdb6aab389"
  },
  {
    "Label": "7;3",
    "Value": "a314a175-0c8b-409f-ab39-af468526c0ba"
  },
  {
    "Label": "8;4",
    "Value": "4f1b361d-9afc-4466-88a2-961ab3178bbb"
  }
] 
 </msg>
<msg timestamp="20200815 00:25:15.833" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:15.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:15.690" endtime="20200815 00:25:15.833"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:15.833" endtime="20200815 00:25:15.834"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${keyboardPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.834" endtime="20200815 00:25:15.836"></status>
</kw>
<kw name="Fill Dictionary of virtual Keyboard" library="authorizationKWS">
<kw name="${index} IN RANGE [ ${10} ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.839" level="INFO">${indexString} = 0</msg>
<status status="PASS" starttime="20200815 00:25:15.838" endtime="20200815 00:25:15.839"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.843" level="FAIL">'6;2' does not contain '0'</msg>
<status status="FAIL" starttime="20200815 00:25:15.842" endtime="20200815 00:25:15.843"></status>
</kw>
<msg timestamp="20200815 00:25:15.843" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.841" endtime="20200815 00:25:15.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.843" endtime="20200815 00:25:15.844"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.841" endtime="20200815 00:25:15.844"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.846" level="FAIL">'9;5' does not contain '0'</msg>
<status status="FAIL" starttime="20200815 00:25:15.845" endtime="20200815 00:25:15.846"></status>
</kw>
<msg timestamp="20200815 00:25:15.846" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.845" endtime="20200815 00:25:15.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.847" endtime="20200815 00:25:15.847"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.844" endtime="20200815 00:25:15.848"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.848" endtime="20200815 00:25:15.849"></status>
</kw>
<msg timestamp="20200815 00:25:15.850" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.848" endtime="20200815 00:25:15.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.851" endtime="20200815 00:25:15.852"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.851" endtime="20200815 00:25:15.852"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.848" endtime="20200815 00:25:15.852"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.854" level="FAIL">'7;3' does not contain '0'</msg>
<status status="FAIL" starttime="20200815 00:25:15.853" endtime="20200815 00:25:15.854"></status>
</kw>
<msg timestamp="20200815 00:25:15.854" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.852" endtime="20200815 00:25:15.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.854" endtime="20200815 00:25:15.855"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.852" endtime="20200815 00:25:15.855"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.857" level="FAIL">'8;4' does not contain '0'</msg>
<status status="FAIL" starttime="20200815 00:25:15.856" endtime="20200815 00:25:15.857"></status>
</kw>
<msg timestamp="20200815 00:25:15.858" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.856" endtime="20200815 00:25:15.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.858" endtime="20200815 00:25:15.858"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.855" endtime="20200815 00:25:15.858"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.840" endtime="20200815 00:25:15.858"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.840" endtime="20200815 00:25:15.859"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.837" endtime="20200815 00:25:15.859"></status>
</kw>
<kw name="${index} = 1" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.860" level="INFO">${indexString} = 1</msg>
<status status="PASS" starttime="20200815 00:25:15.860" endtime="20200815 00:25:15.860"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.863" level="FAIL">'6;2' does not contain '1'</msg>
<status status="FAIL" starttime="20200815 00:25:15.862" endtime="20200815 00:25:15.863"></status>
</kw>
<msg timestamp="20200815 00:25:15.863" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.861" endtime="20200815 00:25:15.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.863" endtime="20200815 00:25:15.864"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.861" endtime="20200815 00:25:15.864"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.866" level="FAIL">'9;5' does not contain '1'</msg>
<status status="FAIL" starttime="20200815 00:25:15.865" endtime="20200815 00:25:15.866"></status>
</kw>
<msg timestamp="20200815 00:25:15.866" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.864" endtime="20200815 00:25:15.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.867" endtime="20200815 00:25:15.867"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.864" endtime="20200815 00:25:15.867"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.869" endtime="20200815 00:25:15.869"></status>
</kw>
<msg timestamp="20200815 00:25:15.870" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.869" endtime="20200815 00:25:15.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.871" endtime="20200815 00:25:15.873"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.870" endtime="20200815 00:25:15.874"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.867" endtime="20200815 00:25:15.874"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.876" level="FAIL">'7;3' does not contain '1'</msg>
<status status="FAIL" starttime="20200815 00:25:15.875" endtime="20200815 00:25:15.876"></status>
</kw>
<msg timestamp="20200815 00:25:15.876" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.874" endtime="20200815 00:25:15.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.877" endtime="20200815 00:25:15.877"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.874" endtime="20200815 00:25:15.877"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.880" level="FAIL">'8;4' does not contain '1'</msg>
<status status="FAIL" starttime="20200815 00:25:15.879" endtime="20200815 00:25:15.880"></status>
</kw>
<msg timestamp="20200815 00:25:15.880" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.878" endtime="20200815 00:25:15.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.880" endtime="20200815 00:25:15.881"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.877" endtime="20200815 00:25:15.881"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.861" endtime="20200815 00:25:15.881"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.860" endtime="20200815 00:25:15.881"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.859" endtime="20200815 00:25:15.881"></status>
</kw>
<kw name="${index} = 2" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.882" level="INFO">${indexString} = 2</msg>
<status status="PASS" starttime="20200815 00:25:15.882" endtime="20200815 00:25:15.882"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.886" endtime="20200815 00:25:15.886"></status>
</kw>
<msg timestamp="20200815 00:25:15.887" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.885" endtime="20200815 00:25:15.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.889" endtime="20200815 00:25:15.890"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.889" endtime="20200815 00:25:15.890"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.885" endtime="20200815 00:25:15.890"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.893" level="FAIL">'9;5' does not contain '2'</msg>
<status status="FAIL" starttime="20200815 00:25:15.891" endtime="20200815 00:25:15.893"></status>
</kw>
<msg timestamp="20200815 00:25:15.893" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.891" endtime="20200815 00:25:15.893"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.893" endtime="20200815 00:25:15.895"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.890" endtime="20200815 00:25:15.895"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.896" level="FAIL">'1;0' does not contain '2'</msg>
<status status="FAIL" starttime="20200815 00:25:15.895" endtime="20200815 00:25:15.896"></status>
</kw>
<msg timestamp="20200815 00:25:15.913" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.895" endtime="20200815 00:25:15.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.914" endtime="20200815 00:25:15.914"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.895" endtime="20200815 00:25:15.914"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.917" level="FAIL">'7;3' does not contain '2'</msg>
<status status="FAIL" starttime="20200815 00:25:15.916" endtime="20200815 00:25:15.917"></status>
</kw>
<msg timestamp="20200815 00:25:15.917" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.915" endtime="20200815 00:25:15.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.917" endtime="20200815 00:25:15.918"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.915" endtime="20200815 00:25:15.918"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.921" level="FAIL">'8;4' does not contain '2'</msg>
<status status="FAIL" starttime="20200815 00:25:15.920" endtime="20200815 00:25:15.921"></status>
</kw>
<msg timestamp="20200815 00:25:15.921" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.920" endtime="20200815 00:25:15.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.922" endtime="20200815 00:25:15.923"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.918" endtime="20200815 00:25:15.923"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.884" endtime="20200815 00:25:15.923"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.883" endtime="20200815 00:25:15.923"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.881" endtime="20200815 00:25:15.923"></status>
</kw>
<kw name="${index} = 3" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.926" level="INFO">${indexString} = 3</msg>
<status status="PASS" starttime="20200815 00:25:15.924" endtime="20200815 00:25:15.926"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.932" level="FAIL">'6;2' does not contain '3'</msg>
<status status="FAIL" starttime="20200815 00:25:15.931" endtime="20200815 00:25:15.932"></status>
</kw>
<msg timestamp="20200815 00:25:15.932" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.930" endtime="20200815 00:25:15.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.932" endtime="20200815 00:25:15.933"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.930" endtime="20200815 00:25:15.933"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.936" level="FAIL">'9;5' does not contain '3'</msg>
<status status="FAIL" starttime="20200815 00:25:15.935" endtime="20200815 00:25:15.936"></status>
</kw>
<msg timestamp="20200815 00:25:15.937" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.934" endtime="20200815 00:25:15.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.938" endtime="20200815 00:25:15.940"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.933" endtime="20200815 00:25:15.940"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.943" level="FAIL">'1;0' does not contain '3'</msg>
<status status="FAIL" starttime="20200815 00:25:15.942" endtime="20200815 00:25:15.943"></status>
</kw>
<msg timestamp="20200815 00:25:15.943" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.941" endtime="20200815 00:25:15.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.944" endtime="20200815 00:25:15.945"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.940" endtime="20200815 00:25:15.945"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.946" endtime="20200815 00:25:15.947"></status>
</kw>
<msg timestamp="20200815 00:25:15.948" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.945" endtime="20200815 00:25:15.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.954" endtime="20200815 00:25:15.955"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.948" endtime="20200815 00:25:15.956"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.945" endtime="20200815 00:25:15.956"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.957" level="FAIL">'8;4' does not contain '3'</msg>
<status status="FAIL" starttime="20200815 00:25:15.957" endtime="20200815 00:25:15.959"></status>
</kw>
<msg timestamp="20200815 00:25:15.959" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.956" endtime="20200815 00:25:15.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.959" endtime="20200815 00:25:15.960"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.956" endtime="20200815 00:25:15.960"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.927" endtime="20200815 00:25:15.960"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.926" endtime="20200815 00:25:15.960"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.924" endtime="20200815 00:25:15.960"></status>
</kw>
<kw name="${index} = 4" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.961" level="INFO">${indexString} = 4</msg>
<status status="PASS" starttime="20200815 00:25:15.961" endtime="20200815 00:25:15.961"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.965" level="FAIL">'6;2' does not contain '4'</msg>
<status status="FAIL" starttime="20200815 00:25:15.964" endtime="20200815 00:25:15.965"></status>
</kw>
<msg timestamp="20200815 00:25:15.965" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.963" endtime="20200815 00:25:15.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.965" endtime="20200815 00:25:15.966"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.963" endtime="20200815 00:25:15.966"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.968" level="FAIL">'9;5' does not contain '4'</msg>
<status status="FAIL" starttime="20200815 00:25:15.968" endtime="20200815 00:25:15.968"></status>
</kw>
<msg timestamp="20200815 00:25:15.968" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.967" endtime="20200815 00:25:15.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.969" endtime="20200815 00:25:15.969"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.967" endtime="20200815 00:25:15.969"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.973" level="FAIL">'1;0' does not contain '4'</msg>
<status status="FAIL" starttime="20200815 00:25:15.971" endtime="20200815 00:25:15.973"></status>
</kw>
<msg timestamp="20200815 00:25:15.973" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.971" endtime="20200815 00:25:15.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.974" endtime="20200815 00:25:15.975"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.970" endtime="20200815 00:25:15.975"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.978" level="FAIL">'7;3' does not contain '4'</msg>
<status status="FAIL" starttime="20200815 00:25:15.976" endtime="20200815 00:25:15.978"></status>
</kw>
<msg timestamp="20200815 00:25:15.978" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.976" endtime="20200815 00:25:15.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.979" endtime="20200815 00:25:15.979"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.975" endtime="20200815 00:25:15.979"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.980" endtime="20200815 00:25:15.981"></status>
</kw>
<msg timestamp="20200815 00:25:15.982" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.980" endtime="20200815 00:25:15.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.983" endtime="20200815 00:25:15.984"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.982" endtime="20200815 00:25:15.984"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.979" endtime="20200815 00:25:15.984"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.962" endtime="20200815 00:25:15.984"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.961" endtime="20200815 00:25:15.984"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.960" endtime="20200815 00:25:15.985"></status>
</kw>
<kw name="${index} = 5" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:15.986" level="INFO">${indexString} = 5</msg>
<status status="PASS" starttime="20200815 00:25:15.985" endtime="20200815 00:25:15.986"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.989" level="FAIL">'6;2' does not contain '5'</msg>
<status status="FAIL" starttime="20200815 00:25:15.988" endtime="20200815 00:25:15.989"></status>
</kw>
<msg timestamp="20200815 00:25:15.990" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.988" endtime="20200815 00:25:15.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.990" endtime="20200815 00:25:15.990"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.987" endtime="20200815 00:25:15.990"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.991" endtime="20200815 00:25:15.991"></status>
</kw>
<msg timestamp="20200815 00:25:15.991" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:15.990" endtime="20200815 00:25:15.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.992" endtime="20200815 00:25:15.993"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.992" endtime="20200815 00:25:15.993"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.990" endtime="20200815 00:25:15.993"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.994" level="FAIL">'1;0' does not contain '5'</msg>
<status status="FAIL" starttime="20200815 00:25:15.993" endtime="20200815 00:25:15.994"></status>
</kw>
<msg timestamp="20200815 00:25:15.994" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.993" endtime="20200815 00:25:15.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.995" endtime="20200815 00:25:15.995"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.993" endtime="20200815 00:25:15.995"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.996" level="FAIL">'7;3' does not contain '5'</msg>
<status status="FAIL" starttime="20200815 00:25:15.995" endtime="20200815 00:25:15.996"></status>
</kw>
<msg timestamp="20200815 00:25:15.996" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.995" endtime="20200815 00:25:15.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.996" endtime="20200815 00:25:15.996"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.995" endtime="20200815 00:25:15.996"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:15.997" level="FAIL">'8;4' does not contain '5'</msg>
<status status="FAIL" starttime="20200815 00:25:15.997" endtime="20200815 00:25:15.997"></status>
</kw>
<msg timestamp="20200815 00:25:15.998" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:15.997" endtime="20200815 00:25:15.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:15.998" endtime="20200815 00:25:15.998"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.997" endtime="20200815 00:25:15.998"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.987" endtime="20200815 00:25:15.998"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.986" endtime="20200815 00:25:15.998"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.985" endtime="20200815 00:25:15.998"></status>
</kw>
<kw name="${index} = 6" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:16.000" level="INFO">${indexString} = 6</msg>
<status status="PASS" starttime="20200815 00:25:15.999" endtime="20200815 00:25:16.000"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.002" endtime="20200815 00:25:16.002"></status>
</kw>
<msg timestamp="20200815 00:25:16.002" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:16.002" endtime="20200815 00:25:16.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.003" endtime="20200815 00:25:16.003"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.002" endtime="20200815 00:25:16.003"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.002" endtime="20200815 00:25:16.003"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.005" level="FAIL">'9;5' does not contain '6'</msg>
<status status="FAIL" starttime="20200815 00:25:16.004" endtime="20200815 00:25:16.005"></status>
</kw>
<msg timestamp="20200815 00:25:16.005" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.003" endtime="20200815 00:25:16.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.006" endtime="20200815 00:25:16.006"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.003" endtime="20200815 00:25:16.006"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.008" level="FAIL">'1;0' does not contain '6'</msg>
<status status="FAIL" starttime="20200815 00:25:16.007" endtime="20200815 00:25:16.008"></status>
</kw>
<msg timestamp="20200815 00:25:16.008" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.007" endtime="20200815 00:25:16.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.009" endtime="20200815 00:25:16.009"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.006" endtime="20200815 00:25:16.009"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.010" level="FAIL">'7;3' does not contain '6'</msg>
<status status="FAIL" starttime="20200815 00:25:16.009" endtime="20200815 00:25:16.010"></status>
</kw>
<msg timestamp="20200815 00:25:16.010" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.009" endtime="20200815 00:25:16.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.011" endtime="20200815 00:25:16.011"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.009" endtime="20200815 00:25:16.011"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.012" level="FAIL">'8;4' does not contain '6'</msg>
<status status="FAIL" starttime="20200815 00:25:16.011" endtime="20200815 00:25:16.012"></status>
</kw>
<msg timestamp="20200815 00:25:16.012" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.011" endtime="20200815 00:25:16.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.012" endtime="20200815 00:25:16.012"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.011" endtime="20200815 00:25:16.012"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.001" endtime="20200815 00:25:16.012"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.000" endtime="20200815 00:25:16.013"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.999" endtime="20200815 00:25:16.013"></status>
</kw>
<kw name="${index} = 7" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:16.013" level="INFO">${indexString} = 7</msg>
<status status="PASS" starttime="20200815 00:25:16.013" endtime="20200815 00:25:16.013"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.015" level="FAIL">'6;2' does not contain '7'</msg>
<status status="FAIL" starttime="20200815 00:25:16.014" endtime="20200815 00:25:16.015"></status>
</kw>
<msg timestamp="20200815 00:25:16.015" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.014" endtime="20200815 00:25:16.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.015" endtime="20200815 00:25:16.016"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.014" endtime="20200815 00:25:16.016"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.017" level="FAIL">'9;5' does not contain '7'</msg>
<status status="FAIL" starttime="20200815 00:25:16.016" endtime="20200815 00:25:16.017"></status>
</kw>
<msg timestamp="20200815 00:25:16.017" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.016" endtime="20200815 00:25:16.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.017" endtime="20200815 00:25:16.017"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.016" endtime="20200815 00:25:16.017"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.018" level="FAIL">'1;0' does not contain '7'</msg>
<status status="FAIL" starttime="20200815 00:25:16.018" endtime="20200815 00:25:16.018"></status>
</kw>
<msg timestamp="20200815 00:25:16.018" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.018" endtime="20200815 00:25:16.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.019" endtime="20200815 00:25:16.019"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.017" endtime="20200815 00:25:16.019"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.020" endtime="20200815 00:25:16.020"></status>
</kw>
<msg timestamp="20200815 00:25:16.020" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:16.019" endtime="20200815 00:25:16.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.022" endtime="20200815 00:25:16.022"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.021" endtime="20200815 00:25:16.022"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.019" endtime="20200815 00:25:16.022"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.023" level="FAIL">'8;4' does not contain '7'</msg>
<status status="FAIL" starttime="20200815 00:25:16.022" endtime="20200815 00:25:16.023"></status>
</kw>
<msg timestamp="20200815 00:25:16.023" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.022" endtime="20200815 00:25:16.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.023" endtime="20200815 00:25:16.023"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.022" endtime="20200815 00:25:16.023"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.014" endtime="20200815 00:25:16.023"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.013" endtime="20200815 00:25:16.024"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.013" endtime="20200815 00:25:16.024"></status>
</kw>
<kw name="${index} = 8" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:16.024" level="INFO">${indexString} = 8</msg>
<status status="PASS" starttime="20200815 00:25:16.024" endtime="20200815 00:25:16.024"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.026" level="FAIL">'6;2' does not contain '8'</msg>
<status status="FAIL" starttime="20200815 00:25:16.026" endtime="20200815 00:25:16.026"></status>
</kw>
<msg timestamp="20200815 00:25:16.026" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.025" endtime="20200815 00:25:16.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.026" endtime="20200815 00:25:16.027"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.025" endtime="20200815 00:25:16.027"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.028" level="FAIL">'9;5' does not contain '8'</msg>
<status status="FAIL" starttime="20200815 00:25:16.027" endtime="20200815 00:25:16.028"></status>
</kw>
<msg timestamp="20200815 00:25:16.028" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.027" endtime="20200815 00:25:16.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.028" endtime="20200815 00:25:16.028"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.027" endtime="20200815 00:25:16.028"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.029" level="FAIL">'1;0' does not contain '8'</msg>
<status status="FAIL" starttime="20200815 00:25:16.029" endtime="20200815 00:25:16.029"></status>
</kw>
<msg timestamp="20200815 00:25:16.030" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.029" endtime="20200815 00:25:16.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.030" endtime="20200815 00:25:16.030"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.029" endtime="20200815 00:25:16.030"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.031" level="FAIL">'7;3' does not contain '8'</msg>
<status status="FAIL" starttime="20200815 00:25:16.031" endtime="20200815 00:25:16.031"></status>
</kw>
<msg timestamp="20200815 00:25:16.031" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.030" endtime="20200815 00:25:16.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.031" endtime="20200815 00:25:16.032"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.030" endtime="20200815 00:25:16.032"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.032" endtime="20200815 00:25:16.033"></status>
</kw>
<msg timestamp="20200815 00:25:16.033" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:16.032" endtime="20200815 00:25:16.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.033" endtime="20200815 00:25:16.034"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.033" endtime="20200815 00:25:16.034"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.032" endtime="20200815 00:25:16.034"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.025" endtime="20200815 00:25:16.034"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.025" endtime="20200815 00:25:16.034"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.024" endtime="20200815 00:25:16.034"></status>
</kw>
<kw name="${index} = 9" type="foritem">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${indexString}</var>
</assign>
<msg timestamp="20200815 00:25:16.035" level="INFO">${indexString} = 9</msg>
<status status="PASS" starttime="20200815 00:25:16.034" endtime="20200815 00:25:16.035"></status>
</kw>
<kw name="Fill each Dictionary about number element" library="authorizationKWS">
<arguments>
<arg>${indexString}</arg>
</arguments>
<kw name="${virtualkey} IN [ @{response.json()} ]" type="for">
<kw name="${virtualkey} = {'Label': '6;2', 'Value': '392b79d2-9175-418e-8d04-270709af02e4'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.036" level="FAIL">'6;2' does not contain '9'</msg>
<status status="FAIL" starttime="20200815 00:25:16.036" endtime="20200815 00:25:16.036"></status>
</kw>
<msg timestamp="20200815 00:25:16.036" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.036" endtime="20200815 00:25:16.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.037" endtime="20200815 00:25:16.037"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.035" endtime="20200815 00:25:16.037"></status>
</kw>
<kw name="${virtualkey} = {'Label': '9;5', 'Value': 'd01837ae-29ee-49d4-8b6b-aaeec1357eaa'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.038" endtime="20200815 00:25:16.038"></status>
</kw>
<msg timestamp="20200815 00:25:16.038" level="INFO">${condicao} = True</msg>
<status status="PASS" starttime="20200815 00:25:16.037" endtime="20200815 00:25:16.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.039" endtime="20200815 00:25:16.040"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.038" endtime="20200815 00:25:16.040"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.037" endtime="20200815 00:25:16.040"></status>
</kw>
<kw name="${virtualkey} = {'Label': '1;0', 'Value': '6ea1463e-572a-4976-99fa-6bcdb6aab389'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.041" level="FAIL">'1;0' does not contain '9'</msg>
<status status="FAIL" starttime="20200815 00:25:16.040" endtime="20200815 00:25:16.041"></status>
</kw>
<msg timestamp="20200815 00:25:16.041" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.040" endtime="20200815 00:25:16.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.041" endtime="20200815 00:25:16.041"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.040" endtime="20200815 00:25:16.041"></status>
</kw>
<kw name="${virtualkey} = {'Label': '7;3', 'Value': 'a314a175-0c8b-409f-ab39-af468526c0ba'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.043" level="FAIL">'7;3' does not contain '9'</msg>
<status status="FAIL" starttime="20200815 00:25:16.042" endtime="20200815 00:25:16.043"></status>
</kw>
<msg timestamp="20200815 00:25:16.043" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.042" endtime="20200815 00:25:16.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.043" endtime="20200815 00:25:16.044"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.041" endtime="20200815 00:25:16.044"></status>
</kw>
<kw name="${virtualkey} = {'Label': '8;4', 'Value': '4f1b361d-9afc-4466-88a2-961ab3178bbb'}" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<assign>
<var>${condicao}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${virtualkey['Label']}</arg>
<arg>${number}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.045" level="FAIL">'8;4' does not contain '9'</msg>
<status status="FAIL" starttime="20200815 00:25:16.044" endtime="20200815 00:25:16.045"></status>
</kw>
<msg timestamp="20200815 00:25:16.045" level="INFO">${condicao} = False</msg>
<status status="PASS" starttime="20200815 00:25:16.044" endtime="20200815 00:25:16.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condicao}</arg>
<arg>Set To Dictionary</arg>
<arg>${VIRTUAL_KEYBOARD}</arg>
<arg>btn${number}</arg>
<arg>${virtualkey['Value']}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.045" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.044" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.035" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.035" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.034" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.837" endtime="20200815 00:25:16.045"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.836" endtime="20200815 00:25:16.046"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:15.680" endtime="20200815 00:25:16.046"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.046" endtime="20200815 00:25:16.047"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.046" endtime="20200815 00:25:16.047"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:14.341" endtime="20200815 00:25:16.047" critical="yes"></status>
</test>
<test id="s1-t2" name="Realizar Login Com Sucesso">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:16.050" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:16.050" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:16.049" endtime="20200815 00:25:16.050"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:16.051" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:16.051" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:16.051" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:16.051" endtime="20200815 00:25:16.051"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.052" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:16.051" endtime="20200815 00:25:16.052"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.049" endtime="20200815 00:25:16.052"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:16.053" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:16.053" endtime="20200815 00:25:16.053"></status>
</kw>
<msg timestamp="20200815 00:25:16.053" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:16.052" endtime="20200815 00:25:16.053"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:16.216" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:16.217" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:16.217" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:16.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.054" endtime="20200815 00:25:16.218"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.219" endtime="20200815 00:25:16.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:16.226" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:16.224" endtime="20200815 00:25:16.226"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.228" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:16.227" endtime="20200815 00:25:16.228"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.048" endtime="20200815 00:25:16.229"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.232" endtime="20200815 00:25:16.234"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.230" endtime="20200815 00:25:16.235"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:16.240" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:16.245" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:16.239" endtime="20200815 00:25:16.245"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:16.247" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjhjNGQzNWE5LTkzZWEtNDhhYi05MjA2LWM2MThkYzhlYWQ1OCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTczNTQzNjcsImV4cCI6MTU5NzM2ODc2NywiaWF0IjoxNTk3MzU0MzY3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0._udTpbuMSGapBM0Sz-P4o0Qx1ukJW739RqWDC11JI4M", "refresh_token": "rnFoZi3Fx2NLBX9ktQL5TkZuuwExBfbUrkkPRoADY", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:16.247" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:16.248" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:16.247" endtime="20200815 00:25:16.248"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.251" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:16.249" endtime="20200815 00:25:16.251"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.237" endtime="20200815 00:25:16.252"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:16.256" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:16.254" endtime="20200815 00:25:16.256"></status>
</kw>
<msg timestamp="20200815 00:25:16.257" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:16.253" endtime="20200815 00:25:16.257"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:16.260" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:16.259" endtime="20200815 00:25:16.260"></status>
</kw>
<msg timestamp="20200815 00:25:16.261" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:16.257" endtime="20200815 00:25:16.261"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.261" endtime="20200815 00:25:16.261"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.262" endtime="20200815 00:25:16.262"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.262" endtime="20200815 00:25:16.263"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.263" endtime="20200815 00:25:16.264"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.265" endtime="20200815 00:25:16.265"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:16.924" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:16.924" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImY4M2FkNThiLWE0NGQtNDEyNS1iN2ZjLTA1ZTFiNWZjNThlMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTYsImV4cCI6MTU5NzQ3NjMxNiwiaWF0IjoxNTk3NDYxOTE2LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.wBBE_7EIXzruW0FDY60XFjsFtgvZnj3B9mKa1LnKFrE",
  "refresh_token": "ppyRIFGnwaUxkfrAwEmIh19uoHLeakRzC3oKqR0wORU",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:16.925" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:16.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.266" endtime="20200815 00:25:16.925"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.925" endtime="20200815 00:25:16.926"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.928" endtime="20200815 00:25:16.929"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.927" endtime="20200815 00:25:16.929"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:16.930" endtime="20200815 00:25:16.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:16.932" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImY4M2FkNThiLWE0NGQtNDEyNS1iN2ZjLTA1ZTFiNWZjNThlMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:16.931" endtime="20200815 00:25:16.932"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.933" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImY4M2FkNThiLWE0NGQtNDEyNS1iN2ZjLTA1ZTFiNWZjNThlMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:16.933" endtime="20200815 00:25:16.934"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.235" endtime="20200815 00:25:16.934"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.935" endtime="20200815 00:25:16.935"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.934" endtime="20200815 00:25:16.935"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.048" endtime="20200815 00:25:16.935"></status>
</kw>
<kw name="Capturar Response e preencher Payload de Login" library="authorizationKWS">
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
<arg>${loginPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:16.937" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:16.937" endtime="20200815 00:25:16.937"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.940" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:16.938" endtime="20200815 00:25:16.940"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.936" endtime="20200815 00:25:16.940"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.936" endtime="20200815 00:25:16.941"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.047" endtime="20200815 00:25:16.941" critical="yes"></status>
</test>
<test id="s1-t3" name="Validando Refresh Token">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:16.945" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:16.946" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:16.944" endtime="20200815 00:25:16.946"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:16.946" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:16.947" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:16.947" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:16.946" endtime="20200815 00:25:16.947"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:16.948" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:16.947" endtime="20200815 00:25:16.948"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.944" endtime="20200815 00:25:16.948"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:16.950" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:16.949" endtime="20200815 00:25:16.950"></status>
</kw>
<msg timestamp="20200815 00:25:16.951" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:16.948" endtime="20200815 00:25:16.951"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:17.116" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:17.116" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:17.117" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:17.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:16.951" endtime="20200815 00:25:17.118"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.119" endtime="20200815 00:25:17.121"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:17.123" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:17.121" endtime="20200815 00:25:17.124"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.125" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:17.124" endtime="20200815 00:25:17.125"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.943" endtime="20200815 00:25:17.126"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.127" endtime="20200815 00:25:17.129"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.126" endtime="20200815 00:25:17.129"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:17.132" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:17.133" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:17.132" endtime="20200815 00:25:17.133"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:17.134" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImY4M2FkNThiLWE0NGQtNDEyNS1iN2ZjLTA1ZTFiNWZjNThlMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTYsImV4cCI6MTU5NzQ3NjMxNiwiaWF0IjoxNTk3NDYxOTE2LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.wBBE_7EIXzruW0FDY60XFjsFtgvZnj3B9mKa1LnKFrE", "refresh_token": "ppyRIFGnwaUxkfrAwEmIh19uoHLeakRzC3oKqR0wORU", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:17.135" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:17.135" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:17.134" endtime="20200815 00:25:17.135"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.137" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:17.136" endtime="20200815 00:25:17.137"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.130" endtime="20200815 00:25:17.137"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:17.140" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:17.139" endtime="20200815 00:25:17.140"></status>
</kw>
<msg timestamp="20200815 00:25:17.141" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:17.137" endtime="20200815 00:25:17.141"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:17.144" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:17.143" endtime="20200815 00:25:17.144"></status>
</kw>
<msg timestamp="20200815 00:25:17.144" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:17.141" endtime="20200815 00:25:17.145"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.145" endtime="20200815 00:25:17.146"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.146" endtime="20200815 00:25:17.147"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.147" endtime="20200815 00:25:17.147"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.148" endtime="20200815 00:25:17.148"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.148" endtime="20200815 00:25:17.149"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:17.782" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:17.782" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks",
  "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:17.783" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:17.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.150" endtime="20200815 00:25:17.783"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.784" endtime="20200815 00:25:17.786"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.788" endtime="20200815 00:25:17.790"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.786" endtime="20200815 00:25:17.790"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:17.791" endtime="20200815 00:25:17.793"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:17.794" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:17.793" endtime="20200815 00:25:17.795"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.796" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:17.795" endtime="20200815 00:25:17.797"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.129" endtime="20200815 00:25:17.797"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:17.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.799" endtime="20200815 00:25:17.802"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.797" endtime="20200815 00:25:17.802"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.943" endtime="20200815 00:25:17.802"></status>
</kw>
<kw name="Enviar requisição de Refresh Token" library="authorizationKWS">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["refresh_token"]}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20200815 00:25:17.806" level="INFO">${token} = MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y</msg>
<status status="PASS" starttime="20200815 00:25:17.806" endtime="20200815 00:25:17.806"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:17.811" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:17.809" endtime="20200815 00:25:17.811"></status>
</kw>
<msg timestamp="20200815 00:25:17.812" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:17.807" endtime="20200815 00:25:17.812"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>token=${token}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200815 00:25:17.813" level="INFO">${body} = {'token': 'MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y'}</msg>
<status status="PASS" starttime="20200815 00:25:17.813" endtime="20200815 00:25:17.814"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/refreshToken</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:18.483" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/refreshToken 
 path_url=/authentication/refreshToken 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '56'} 
 body={"token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y"} 
 </msg>
<msg timestamp="20200815 00:25:18.484" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/refreshToken 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZhNGIxNmE5LTI5MzctNDEzYi05YTZmLTViNGU0OTFkYmJkOCIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjMsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo1NyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjo3LFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6ODMsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTgsImV4cCI6MTU5NzQ3NjMxOCwiaWF0IjoxNTk3NDYxOTE4LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.rQL2mE6zuMTgHaXrwSA7fpKa3ZTigmlgFPnCJcahMcU",
  "refresh_token": "SKBtC7yPEuRaWdm2TD8Ge0xLikMJENO4xpPE4oJN8",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:18.484" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:18.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:17.814" endtime="20200815 00:25:18.484"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.486" endtime="20200815 00:25:18.489"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.485" endtime="20200815 00:25:18.489"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.489" endtime="20200815 00:25:18.491"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:17.804" endtime="20200815 00:25:18.491"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.493" endtime="20200815 00:25:18.494"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.492" endtime="20200815 00:25:18.494"></status>
</kw>
<kw name="Capturar Response e preencher Payload de Login" library="authorizationKWS">
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
<arg>${loginPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:18.498" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:18.497" endtime="20200815 00:25:18.498"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.500" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:18.498" endtime="20200815 00:25:18.501"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.495" endtime="20200815 00:25:18.501"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.495" endtime="20200815 00:25:18.502"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:16.942" endtime="20200815 00:25:18.502" critical="yes"></status>
</test>
<test id="s1-t4" name="Trocar senha por uma já utilizada">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:18.509" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:18.510" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:18.508" endtime="20200815 00:25:18.510"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:18.511" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:18.511" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:18.511" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:18.510" endtime="20200815 00:25:18.511"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.513" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:18.511" endtime="20200815 00:25:18.513"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.507" endtime="20200815 00:25:18.513"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:18.515" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:18.514" endtime="20200815 00:25:18.515"></status>
</kw>
<msg timestamp="20200815 00:25:18.516" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:18.513" endtime="20200815 00:25:18.516"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:18.666" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:18.666" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:18.666" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:18.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.517" endtime="20200815 00:25:18.667"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.668" endtime="20200815 00:25:18.670"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:18.675" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:18.671" endtime="20200815 00:25:18.675"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.678" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:18.675" endtime="20200815 00:25:18.679"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.506" endtime="20200815 00:25:18.679"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.682" endtime="20200815 00:25:18.683"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.680" endtime="20200815 00:25:18.684"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:18.689" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:18.691" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:18.689" endtime="20200815 00:25:18.691"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:18.692" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:18.692" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:18.693" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:18.691" endtime="20200815 00:25:18.693"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:18.694" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:18.693" endtime="20200815 00:25:18.695"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.685" endtime="20200815 00:25:18.695"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:18.699" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:18.697" endtime="20200815 00:25:18.699"></status>
</kw>
<msg timestamp="20200815 00:25:18.700" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:18.695" endtime="20200815 00:25:18.700"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:18.705" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:18.702" endtime="20200815 00:25:18.706"></status>
</kw>
<msg timestamp="20200815 00:25:18.707" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:18.701" endtime="20200815 00:25:18.708"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:18.708" endtime="20200815 00:25:18.709"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:18.710" endtime="20200815 00:25:18.712"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:18.712" endtime="20200815 00:25:18.713"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:18.713" endtime="20200815 00:25:18.714"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:18.715" endtime="20200815 00:25:18.716"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:19.292" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:19.292" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjQ1OTVjNzM2LTAzMmYtNGIzZC05ODkzLTcwNzQ1ZjU2YmU1NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTksImV4cCI6MTU5NzQ3NjMxOSwiaWF0IjoxNTk3NDYxOTE5LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.KPLU4-9B4RGK0E7bOk33U9B7d8UWZyCsWN1HeRJUXik",
  "refresh_token": "vcSrgnqQ7IRL1OzNhD7Qz1cKqgwi2l9YC8A0k20XhNA",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:19.293" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:19.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:18.716" endtime="20200815 00:25:19.294"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.294" endtime="20200815 00:25:19.296"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.299" endtime="20200815 00:25:19.301"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.297" endtime="20200815 00:25:19.302"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.302" endtime="20200815 00:25:19.305"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:19.308" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjQ1OTVjNzM2LTAzMmYtNGIzZC05ODkzLTcwNzQ1ZjU2YmU1NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:19.305" endtime="20200815 00:25:19.308"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.311" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjQ1OTVjNzM2LTAzMmYtNGIzZC05ODkzLTcwNzQ1ZjU2YmU1NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:19.309" endtime="20200815 00:25:19.311"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.684" endtime="20200815 00:25:19.312"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.314" endtime="20200815 00:25:19.315"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.312" endtime="20200815 00:25:19.316"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.505" endtime="20200815 00:25:19.316"></status>
</kw>
<kw name="Enviar requisição de troca de senha usando &quot;${PASSWORD}&quot;" library="authorizationKWS">
<kw name="Get changePassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/chancePassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:19.320" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\chancePassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\chancePassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:19.323" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "792...</msg>
<status status="PASS" starttime="20200815 00:25:19.319" endtime="20200815 00:25:19.323"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${chagePWDPayload}</var>
</assign>
<msg timestamp="20200815 00:25:19.324" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Success": true,
            "Message": "Processo finalizado com sucesso"
        }
    },
    "Validate return code 400": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Property": "400",
            "Message": "Essa senha já foi usada, crie uma diferente"
        }
    }
} </msg>
<msg timestamp="20200815 00:25:19.324" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:19.325" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:19.324" endtime="20200815 00:25:19.325"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.327" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:19.326" endtime="20200815 00:25:19.328"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.318" endtime="20200815 00:25:19.328"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPassword</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.328" endtime="20200815 00:25:19.330"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPasswordConfirmation</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.330" endtime="20200815 00:25:19.332"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.332" endtime="20200815 00:25:19.333"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:19.337" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:19.336" endtime="20200815 00:25:19.337"></status>
</kw>
<msg timestamp="20200815 00:25:19.338" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:19.334" endtime="20200815 00:25:19.338"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:19.342" level="INFO">${my_Body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20200815 00:25:19.340" endtime="20200815 00:25:19.342"></status>
</kw>
<msg timestamp="20200815 00:25:19.343" level="INFO">${body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20200815 00:25:19.338" endtime="20200815 00:25:19.343"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/changePassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:19.435" level="INFO">PUT Request : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 path_url=/authentication/changePassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjQ1OTVjNzM2LTAzMmYtNGIzZC05ODkzLTcwNzQ1ZjU2YmU1NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTksImV4cCI6MTU5NzQ3NjMxOSwiaWF0IjoxNTk3NDYxOTE5LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.KPLU4-9B4RGK0E7bOk33U9B7d8UWZyCsWN1HeRJUXik', 'Content-Length': '62'} 
 body={"newPassword": "123456", "newPasswordConfirmation": "123456"} 
 </msg>
<msg timestamp="20200815 00:25:19.435" level="INFO">PUT Response : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 status=400, reason=Bad Request 
 body=[
  {
    "Property": "400",
    "Message": "Essa senha já foi usada, crie uma diferente"
  }
] 
 </msg>
<msg timestamp="20200815 00:25:19.435" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:19.436" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.343" endtime="20200815 00:25:19.436"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.437" endtime="20200815 00:25:19.437"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.436" endtime="20200815 00:25:19.438"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.438" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.438" endtime="20200815 00:25:19.438"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.317" endtime="20200815 00:25:19.439"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>400</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.440" endtime="20200815 00:25:19.441"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.439" endtime="20200815 00:25:19.441"></status>
</kw>
<kw name="Conferir a mensagem de erro &quot;Essa senha já foi usada, crie uma diferente&quot;" library="authorizationKWS">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.json()[0]["Message"]}</arg>
</arguments>
<assign>
<var>${msgString}</var>
</assign>
<msg timestamp="20200815 00:25:19.443" level="INFO">${msgString} = Essa senha já foi usada, crie uma diferente</msg>
<status status="PASS" starttime="20200815 00:25:19.442" endtime="20200815 00:25:19.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${msgString}</arg>
<arg>${msgExpected}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.443" endtime="20200815 00:25:19.444"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.441" endtime="20200815 00:25:19.444"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:18.503" endtime="20200815 00:25:19.444" critical="yes"></status>
</test>
<test id="s1-t5" name="Trocar senha do usuário com Sucesso">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:19.448" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:19.448" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:19.447" endtime="20200815 00:25:19.448"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:19.449" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:19.449" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:19.449" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:19.449" endtime="20200815 00:25:19.449"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.450" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:19.449" endtime="20200815 00:25:19.450"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.447" endtime="20200815 00:25:19.450"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:19.452" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:19.451" endtime="20200815 00:25:19.452"></status>
</kw>
<msg timestamp="20200815 00:25:19.452" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:19.451" endtime="20200815 00:25:19.452"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:19.661" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:19.661" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:19.661" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:19.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.452" endtime="20200815 00:25:19.661"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.662" endtime="20200815 00:25:19.662"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:19.663" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:19.662" endtime="20200815 00:25:19.663"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.664" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:19.663" endtime="20200815 00:25:19.664"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.446" endtime="20200815 00:25:19.664"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.665" endtime="20200815 00:25:19.665"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.664" endtime="20200815 00:25:19.666"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:19.667" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:19.668" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:19.667" endtime="20200815 00:25:19.668"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:19.669" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:19.669" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:19.669" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:19.668" endtime="20200815 00:25:19.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:19.670" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:19.669" endtime="20200815 00:25:19.670"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.666" endtime="20200815 00:25:19.670"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:19.671" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:19.671" endtime="20200815 00:25:19.671"></status>
</kw>
<msg timestamp="20200815 00:25:19.671" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:19.670" endtime="20200815 00:25:19.671"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:19.672" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:19.672" endtime="20200815 00:25:19.672"></status>
</kw>
<msg timestamp="20200815 00:25:19.673" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:19.672" endtime="20200815 00:25:19.673"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.673" endtime="20200815 00:25:19.673"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.674" endtime="20200815 00:25:19.674"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.674" endtime="20200815 00:25:19.675"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.675" endtime="20200815 00:25:19.675"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:19.675" endtime="20200815 00:25:19.676"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:20.403" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:20.403" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImJjNDJjMzY4LWIzNjUtNGM3Mi1iNjM0LWRmODUwNTA2NzU4OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjAsImV4cCI6MTU5NzQ3NjMyMCwiaWF0IjoxNTk3NDYxOTIwLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.KuMemq0fyTXWNGkLTIJcwj3jgIKarokbMXOxVgWljS4",
  "refresh_token": "3BkEttPW0XgXlAbGyvY0CJZzgHa4F43uEtAl4eDc",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:20.403" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:20.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:19.676" endtime="20200815 00:25:20.404"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.404" endtime="20200815 00:25:20.406"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.407" endtime="20200815 00:25:20.408"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.406" endtime="20200815 00:25:20.409"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.409" endtime="20200815 00:25:20.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:20.412" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImJjNDJjMzY4LWIzNjUtNGM3Mi1iNjM0LWRmODUwNTA2NzU4OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:20.411" endtime="20200815 00:25:20.412"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.414" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImJjNDJjMzY4LWIzNjUtNGM3Mi1iNjM0LWRmODUwNTA2NzU4OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:20.412" endtime="20200815 00:25:20.414"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.666" endtime="20200815 00:25:20.414"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.416" endtime="20200815 00:25:20.417"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.415" endtime="20200815 00:25:20.418"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:19.446" endtime="20200815 00:25:20.418"></status>
</kw>
<kw name="Enviar requisição de troca de senha usando &quot;123456&quot;" library="authorizationKWS">
<kw name="Get changePassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/chancePassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:20.422" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\chancePassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\chancePassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:20.422" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "792...</msg>
<status status="PASS" starttime="20200815 00:25:20.422" endtime="20200815 00:25:20.423"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${chagePWDPayload}</var>
</assign>
<msg timestamp="20200815 00:25:20.424" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Success": true,
            "Message": "Processo finalizado com sucesso"
        }
    },
    "Validate return code 400": {
        "url": "/authentication/changePassword",
        "tipo": "POST",
        "parametro": "",
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1",
            "Content-Type": "application/json",
            "Authorization": "Bearer Authorization"
        },
        "body": {
            "newPassword": "654321",
            "newPasswordConfirmation": "654321"
        },
        "response": {
            "Property": "400",
            "Message": "Essa senha já foi usada, crie uma diferente"
        }
    }
} </msg>
<msg timestamp="20200815 00:25:20.424" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:20.424" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:20.423" endtime="20200815 00:25:20.424"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.426" level="INFO">${chagePWDPayload} = {'Validate return code 200': {'url': '/authentication/changePassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:20.425" endtime="20200815 00:25:20.426"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.420" endtime="20200815 00:25:20.427"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPassword</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.427" endtime="20200815 00:25:20.428"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["body"]}</arg>
<arg>newPasswordConfirmation</arg>
<arg>${newPassword}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.429" endtime="20200815 00:25:20.430"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${chagePWDPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.430" endtime="20200815 00:25:20.431"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:20.433" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:20.433" endtime="20200815 00:25:20.433"></status>
</kw>
<msg timestamp="20200815 00:25:20.433" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:20.431" endtime="20200815 00:25:20.433"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${chagePWDPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:20.435" level="INFO">${my_Body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20200815 00:25:20.433" endtime="20200815 00:25:20.435"></status>
</kw>
<msg timestamp="20200815 00:25:20.435" level="INFO">${body} = {'newPassword': '123456', 'newPasswordConfirmation': '123456'}</msg>
<status status="PASS" starttime="20200815 00:25:20.433" endtime="20200815 00:25:20.435"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/changePassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:20.529" level="INFO">PUT Request : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 path_url=/authentication/changePassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImJjNDJjMzY4LWIzNjUtNGM3Mi1iNjM0LWRmODUwNTA2NzU4OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjAsImV4cCI6MTU5NzQ3NjMyMCwiaWF0IjoxNTk3NDYxOTIwLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.KuMemq0fyTXWNGkLTIJcwj3jgIKarokbMXOxVgWljS4', 'Content-Length': '62'} 
 body={"newPassword": "123456", "newPasswordConfirmation": "123456"} 
 </msg>
<msg timestamp="20200815 00:25:20.530" level="INFO">PUT Response : url=https://sandbox-code.biz.com.br/authentication/changePassword 
 status=400, reason=Bad Request 
 body=[
  {
    "Property": "400",
    "Message": "Essa senha já foi usada, crie uma diferente"
  }
] 
 </msg>
<msg timestamp="20200815 00:25:20.530" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:20.531" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.435" endtime="20200815 00:25:20.531"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.533" endtime="20200815 00:25:20.537"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.531" endtime="20200815 00:25:20.537"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.541" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.538" endtime="20200815 00:25:20.542"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.418" endtime="20200815 00:25:20.543"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200815 00:25:20.548" level="FAIL">400 != 200</msg>
<status status="FAIL" starttime="20200815 00:25:20.546" endtime="20200815 00:25:20.549"></status>
</kw>
<status status="FAIL" starttime="20200815 00:25:20.543" endtime="20200815 00:25:20.550"></status>
</kw>
<status status="FAIL" starttime="20200815 00:25:19.445" endtime="20200815 00:25:20.551" critical="yes">400 != 200</status>
</test>
<test id="s1-t6" name="Validando API de solicitação de permiti minha senha via SMS">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:20.570" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:20.574" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:20.565" endtime="20200815 00:25:20.574"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:20.576" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:20.577" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:20.577" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:20.575" endtime="20200815 00:25:20.577"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.581" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:20.578" endtime="20200815 00:25:20.581"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.562" endtime="20200815 00:25:20.582"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:20.586" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:20.584" endtime="20200815 00:25:20.587"></status>
</kw>
<msg timestamp="20200815 00:25:20.587" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:20.582" endtime="20200815 00:25:20.588"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:20.742" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:20.743" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:20.743" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:20.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.590" endtime="20200815 00:25:20.744"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.744" endtime="20200815 00:25:20.746"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:20.748" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:20.747" endtime="20200815 00:25:20.748"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.750" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:20.749" endtime="20200815 00:25:20.751"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.559" endtime="20200815 00:25:20.751"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.754" endtime="20200815 00:25:20.757"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.752" endtime="20200815 00:25:20.758"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:20.763" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:20.766" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:20.762" endtime="20200815 00:25:20.766"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:20.767" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:20.768" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:20.768" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:20.767" endtime="20200815 00:25:20.768"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:20.773" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:20.769" endtime="20200815 00:25:20.774"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.760" endtime="20200815 00:25:20.774"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:20.778" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:20.776" endtime="20200815 00:25:20.779"></status>
</kw>
<msg timestamp="20200815 00:25:20.780" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:20.775" endtime="20200815 00:25:20.780"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:20.783" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:20.782" endtime="20200815 00:25:20.783"></status>
</kw>
<msg timestamp="20200815 00:25:20.784" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:20.781" endtime="20200815 00:25:20.784"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.784" endtime="20200815 00:25:20.785"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.785" endtime="20200815 00:25:20.786"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.786" endtime="20200815 00:25:20.787"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.787" endtime="20200815 00:25:20.788"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:20.789" endtime="20200815 00:25:20.790"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:21.445" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:21.445" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjYxMjUzMTFhLWI3YzAtNGEzMC1hOGJlLTFhNTI0MzZiZTYzMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjEsImV4cCI6MTU5NzQ3NjMyMSwiaWF0IjoxNTk3NDYxOTIxLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.1kTgUG4zeDj0Twj17ywtS8HGly0HkkjsL2TVxMQO3i8",
  "refresh_token": "MQ0xI33IvBvE5CxvhmoVcr7rh0f0J5zcFG0uWnrCF0",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:21.445" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:21.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:20.790" endtime="20200815 00:25:21.445"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:21.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:21.446" endtime="20200815 00:25:21.446"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:21.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:21.447" endtime="20200815 00:25:21.448"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:21.446" endtime="20200815 00:25:21.448"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.448" endtime="20200815 00:25:21.449"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:21.450" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjYxMjUzMTFhLWI3YzAtNGEzMC1hOGJlLTFhNTI0MzZiZTYzMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:21.449" endtime="20200815 00:25:21.450"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:21.450" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjYxMjUzMTFhLWI3YzAtNGEzMC1hOGJlLTFhNTI0MzZiZTYzMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:21.450" endtime="20200815 00:25:21.451"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.759" endtime="20200815 00:25:21.451"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:21.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:21.451" endtime="20200815 00:25:21.452"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:21.451" endtime="20200815 00:25:21.452"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:20.556" endtime="20200815 00:25:21.452"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;sms&quot;" library="authorizationKWS">
<kw name="Get ForgotPassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:21.454" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:21.457" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:21.454" endtime="20200815 00:25:21.457"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<msg timestamp="20200815 00:25:21.458" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjUxYWVmYTAyLWVjMGYtNGI1My05NjQzLTA4YTBlOTlkZDg0ZiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTczNTQzNzYsImV4cCI6MTU5NzM2ODc3NiwiaWF0IjoxNTk3MzU0Mzc2LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.psXDy2TtGfMRk6_RW0q7VFQGxzxcFmJP2yMTp1Vv-2g"}, "body": {"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "m****a@g****l.com"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20200815 00:25:21.458" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:21.458" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:21.457" endtime="20200815 00:25:21.458"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:21.459" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:21.458" endtime="20200815 00:25:21.459"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:21.453" endtime="20200815 00:25:21.459"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.460" endtime="20200815 00:25:21.460"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.460" endtime="20200815 00:25:21.461"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.461" endtime="20200815 00:25:21.462"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.462" endtime="20200815 00:25:21.462"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:21.463" endtime="20200815 00:25:21.463"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:21.465" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:21.464" endtime="20200815 00:25:21.465"></status>
</kw>
<msg timestamp="20200815 00:25:21.465" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:21.463" endtime="20200815 00:25:21.466"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:21.469" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:21.468" endtime="20200815 00:25:21.469"></status>
</kw>
<msg timestamp="20200815 00:25:21.469" level="INFO">${body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:21.466" endtime="20200815 00:25:21.469"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:22.675" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjYxMjUzMTFhLWI3YzAtNGEzMC1hOGJlLTFhNTI0MzZiZTYzMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjEsImV4cCI6MTU5NzQ3NjMyMSwiaWF0IjoxNTk3NDYxOTIxLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.1kTgUG4zeDj0Twj17ywtS8HGly0HkkjsL2TVxMQO3i8', 'Content-Length': '149'} 
 body={"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20200815 00:25:22.676" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "(83) 9****-**00"
} 
 </msg>
<msg timestamp="20200815 00:25:22.677" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:22.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:21.469" endtime="20200815 00:25:22.677"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.678" endtime="20200815 00:25:22.680"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.681" endtime="20200815 00:25:22.685"></status>
</kw>
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:22.694" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:22.692" endtime="20200815 00:25:22.695"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.703" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:22.696" endtime="20200815 00:25:22.703"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.686" endtime="20200815 00:25:22.704"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:21.453" endtime="20200815 00:25:22.704"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.707" endtime="20200815 00:25:22.709"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.705" endtime="20200815 00:25:22.709"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="PASS" starttime="20200815 00:25:20.553" endtime="20200815 00:25:22.709" critical="yes"></status>
</test>
<test id="s1-t7" name="Validando API de solicitação de permiti minha senha via Email">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:22.719" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:22.732" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:22.717" endtime="20200815 00:25:22.732"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:22.733" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:22.733" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:22.734" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:22.733" endtime="20200815 00:25:22.734"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.736" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:22.735" endtime="20200815 00:25:22.737"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.715" endtime="20200815 00:25:22.737"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:22.740" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:22.739" endtime="20200815 00:25:22.740"></status>
</kw>
<msg timestamp="20200815 00:25:22.741" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:22.737" endtime="20200815 00:25:22.741"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:22.894" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:22.894" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:22.894" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:22.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.741" endtime="20200815 00:25:22.896"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.898" endtime="20200815 00:25:22.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:22.904" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:22.901" endtime="20200815 00:25:22.904"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.908" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:22.905" endtime="20200815 00:25:22.908"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.713" endtime="20200815 00:25:22.909"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.911" endtime="20200815 00:25:22.913"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.909" endtime="20200815 00:25:22.914"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:22.919" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:22.922" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:22.918" endtime="20200815 00:25:22.923"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:22.925" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:22.925" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:22.926" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:22.923" endtime="20200815 00:25:22.926"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:22.929" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:22.927" endtime="20200815 00:25:22.929"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.916" endtime="20200815 00:25:22.930"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:22.935" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:22.932" endtime="20200815 00:25:22.935"></status>
</kw>
<msg timestamp="20200815 00:25:22.936" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:22.930" endtime="20200815 00:25:22.937"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:22.945" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:22.944" endtime="20200815 00:25:22.946"></status>
</kw>
<msg timestamp="20200815 00:25:22.946" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:22.937" endtime="20200815 00:25:22.947"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.947" endtime="20200815 00:25:22.948"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.949" endtime="20200815 00:25:22.950"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.950" endtime="20200815 00:25:22.951"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.951" endtime="20200815 00:25:22.952"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:22.952" endtime="20200815 00:25:22.953"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:23.581" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:23.581" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjM5NmE1YTcxLWRhN2UtNDdhYy05ZDNlLWVjYmMxZWFkZGI0NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjMsImV4cCI6MTU5NzQ3NjMyMywiaWF0IjoxNTk3NDYxOTIzLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.n6uSp7HJDRmgRfOJ7nZ145r0KYDFIsKLBvmUAFyrszA",
  "refresh_token": "td1cyoHBjScHQOMtOVQLhHVuc69f9dZbOix00I1c5FE",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:23.582" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:23.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:22.954" endtime="20200815 00:25:23.582"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:23.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:23.584" endtime="20200815 00:25:23.586"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:23.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:23.589" endtime="20200815 00:25:23.591"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:23.586" endtime="20200815 00:25:23.592"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.592" endtime="20200815 00:25:23.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:23.599" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjM5NmE1YTcxLWRhN2UtNDdhYy05ZDNlLWVjYmMxZWFkZGI0NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:23.596" endtime="20200815 00:25:23.599"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:23.603" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjM5NmE1YTcxLWRhN2UtNDdhYy05ZDNlLWVjYmMxZWFkZGI0NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:23.600" endtime="20200815 00:25:23.604"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.914" endtime="20200815 00:25:23.606"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:23.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:23.610" endtime="20200815 00:25:23.612"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:23.607" endtime="20200815 00:25:23.613"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:22.712" endtime="20200815 00:25:23.613"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;email&quot;" library="authorizationKWS">
<kw name="Get ForgotPassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:23.624" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:23.626" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:23.619" endtime="20200815 00:25:23.627"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<msg timestamp="20200815 00:25:23.629" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjYxMjUzMTFhLWI3YzAtNGEzMC1hOGJlLTFhNTI0MzZiZTYzMiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjEsImV4cCI6MTU5NzQ3NjMyMSwiaWF0IjoxNTk3NDYxOTIxLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.1kTgUG4zeDj0Twj17ywtS8HGly0HkkjsL2TVxMQO3i8"}, "body": {"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "(83) 9****-**00"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20200815 00:25:23.630" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:23.632" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:23.627" endtime="20200815 00:25:23.632"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:23.641" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:23.634" endtime="20200815 00:25:23.641"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:23.615" endtime="20200815 00:25:23.643"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.643" endtime="20200815 00:25:23.646"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.647" endtime="20200815 00:25:23.648"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.649" endtime="20200815 00:25:23.651"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.652" endtime="20200815 00:25:23.657"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:23.658" endtime="20200815 00:25:23.660"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:23.666" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:23.664" endtime="20200815 00:25:23.666"></status>
</kw>
<msg timestamp="20200815 00:25:23.668" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:23.662" endtime="20200815 00:25:23.668"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:23.675" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:23.672" endtime="20200815 00:25:23.675"></status>
</kw>
<msg timestamp="20200815 00:25:23.676" level="INFO">${body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:23.668" endtime="20200815 00:25:23.676"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:26.341" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjM5NmE1YTcxLWRhN2UtNDdhYy05ZDNlLWVjYmMxZWFkZGI0NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjMsImV4cCI6MTU5NzQ3NjMyMywiaWF0IjoxNTk3NDYxOTIzLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.n6uSp7HJDRmgRfOJ7nZ145r0KYDFIsKLBvmUAFyrszA', 'Content-Length': '151'} 
 body={"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20200815 00:25:26.341" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "m****a@g****l.com"
} 
 </msg>
<msg timestamp="20200815 00:25:26.341" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:26.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:23.677" endtime="20200815 00:25:26.341"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.342" endtime="20200815 00:25:26.342"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.343" endtime="20200815 00:25:26.344"></status>
</kw>
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:26.345" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:26.345" endtime="20200815 00:25:26.345"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.347" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:26.346" endtime="20200815 00:25:26.348"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.344" endtime="20200815 00:25:26.348"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:23.614" endtime="20200815 00:25:26.348"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.349" endtime="20200815 00:25:26.350"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.348" endtime="20200815 00:25:26.350"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="PASS" starttime="20200815 00:25:22.711" endtime="20200815 00:25:26.350" critical="yes"></status>
</test>
<test id="s1-t8" name="Validando API de verificação que solicitação de minha senha já foi solicada para envio por SMS">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:26.354" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:26.355" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:26.353" endtime="20200815 00:25:26.355"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:26.356" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:26.356" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:26.356" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:26.355" endtime="20200815 00:25:26.356"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.357" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:26.356" endtime="20200815 00:25:26.357"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.353" endtime="20200815 00:25:26.357"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:26.359" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:26.358" endtime="20200815 00:25:26.359"></status>
</kw>
<msg timestamp="20200815 00:25:26.359" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:26.357" endtime="20200815 00:25:26.359"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:26.503" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:26.503" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:26.503" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:26.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.359" endtime="20200815 00:25:26.504"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.504" endtime="20200815 00:25:26.505"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:26.506" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:26.505" endtime="20200815 00:25:26.506"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.507" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:26.507" endtime="20200815 00:25:26.507"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.352" endtime="20200815 00:25:26.507"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.509" endtime="20200815 00:25:26.510"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.508" endtime="20200815 00:25:26.510"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:26.512" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:26.513" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:26.511" endtime="20200815 00:25:26.513"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:26.515" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:26.515" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:26.515" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:26.513" endtime="20200815 00:25:26.515"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:26.516" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:26.515" endtime="20200815 00:25:26.516"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.511" endtime="20200815 00:25:26.517"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:26.519" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:26.519" endtime="20200815 00:25:26.520"></status>
</kw>
<msg timestamp="20200815 00:25:26.520" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:26.517" endtime="20200815 00:25:26.520"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:26.522" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:26.522" endtime="20200815 00:25:26.522"></status>
</kw>
<msg timestamp="20200815 00:25:26.523" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:26.520" endtime="20200815 00:25:26.523"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.524" endtime="20200815 00:25:26.524"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.525" endtime="20200815 00:25:26.526"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.526" endtime="20200815 00:25:26.527"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.527" endtime="20200815 00:25:26.527"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:26.528" endtime="20200815 00:25:26.529"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:27.199" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:27.200" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjcsImV4cCI6MTU5NzQ3NjMyNywiaWF0IjoxNTk3NDYxOTI3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.04VJ4gA_iZCAJ4BLaxS638YfWty49eqKOYcNEO46dp0",
  "refresh_token": "zVkVpO77xqyxJnZBcksWxBvFbcn4SZPURBlgJHZnc",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:27.200" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:27.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:26.529" endtime="20200815 00:25:27.200"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:27.201" endtime="20200815 00:25:27.201"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:27.202" endtime="20200815 00:25:27.203"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:27.202" endtime="20200815 00:25:27.204"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.204" endtime="20200815 00:25:27.205"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:27.207" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:27.206" endtime="20200815 00:25:27.207"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.207" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:27.207" endtime="20200815 00:25:27.208"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.510" endtime="20200815 00:25:27.208"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:27.209" endtime="20200815 00:25:27.209"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:27.208" endtime="20200815 00:25:27.209"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:26.352" endtime="20200815 00:25:27.210"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;sms&quot;" library="authorizationKWS">
<kw name="Get ForgotPassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:27.213" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:27.213" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:27.212" endtime="20200815 00:25:27.214"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<msg timestamp="20200815 00:25:27.215" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjM5NmE1YTcxLWRhN2UtNDdhYy05ZDNlLWVjYmMxZWFkZGI0NSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjMsImV4cCI6MTU5NzQ3NjMyMywiaWF0IjoxNTk3NDYxOTIzLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.n6uSp7HJDRmgRfOJ7nZ145r0KYDFIsKLBvmUAFyrszA"}, "body": {"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "m****a@g****l.com"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20200815 00:25:27.215" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:27.215" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:27.214" endtime="20200815 00:25:27.215"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.217" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:27.216" endtime="20200815 00:25:27.217"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:27.211" endtime="20200815 00:25:27.218"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.218" endtime="20200815 00:25:27.219"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.219" endtime="20200815 00:25:27.220"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.221" endtime="20200815 00:25:27.222"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.222" endtime="20200815 00:25:27.223"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.224" endtime="20200815 00:25:27.224"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:27.227" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:27.226" endtime="20200815 00:25:27.227"></status>
</kw>
<msg timestamp="20200815 00:25:27.228" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:27.225" endtime="20200815 00:25:27.228"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:27.231" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:27.229" endtime="20200815 00:25:27.231"></status>
</kw>
<msg timestamp="20200815 00:25:27.232" level="INFO">${body} = {'document': '97604451829', 'type': 'sms', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:27.228" endtime="20200815 00:25:27.232"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:27.984" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjcsImV4cCI6MTU5NzQ3NjMyNywiaWF0IjoxNTk3NDYxOTI3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.04VJ4gA_iZCAJ4BLaxS638YfWty49eqKOYcNEO46dp0', 'Content-Length': '149'} 
 body={"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20200815 00:25:27.984" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "(83) 9****-**00"
} 
 </msg>
<msg timestamp="20200815 00:25:27.985" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:27.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:27.232" endtime="20200815 00:25:27.986"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:27.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:27.987" endtime="20200815 00:25:27.990"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:27.991" endtime="20200815 00:25:27.993"></status>
</kw>
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:28.000" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:27.997" endtime="20200815 00:25:28.000"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:28.007" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:28.001" endtime="20200815 00:25:28.007"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:27.994" endtime="20200815 00:25:28.009"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:27.210" endtime="20200815 00:25:28.010"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:28.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:28.014" endtime="20200815 00:25:28.016"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:28.011" endtime="20200815 00:25:28.016"></status>
</kw>
<kw name="Enviar requisição de esqueci minha senha via &quot;email&quot;" library="authorizationKWS">
<kw name="Get ForgotPassword Payload" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:28.022" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:28.023" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:28.020" endtime="20200815 00:25:28.023"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${forgotPasswordPayload}</var>
</assign>
<msg timestamp="20200815 00:25:28.025" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjcsImV4cCI6MTU5NzQ3NjMyNywiaWF0IjoxNTk3NDYxOTI3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.04VJ4gA_iZCAJ4BLaxS638YfWty49eqKOYcNEO46dp0"}, "body": {"document": "97604451829", "type": "sms", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"}, "response": {"Success": true, "Message": "Processo finalizado com sucesso", "Data": "(83) 9****-**00"}}, "Validate return code 400 by email": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "(83) 9****-**00"}]}, "Validate return code 400 by sms": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer Authorization"}, "body": {"document": "{cpf}", "type": "{sms}", "partnerId": "{partnerId}", "platformId": "{platformId}"}, "response": [{"Property": "400", "Message": "Existe um token ativo por - 0:2:43 "}, {"Property": "100", "Message": "{\"DateTime\":\"00:02:43.4862880\",\"Hours\":0,\"Minutes\":2,\"Seconds\":43,\"Milliseconds\":486,\"Ticks\":1634862880}"}, {"Property": "100", "Message": "m****a@g****l.com"}]}} </msg>
<msg timestamp="20200815 00:25:28.025" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:28.026" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:28.024" endtime="20200815 00:25:28.026"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:28.029" level="INFO">${forgotPasswordPayload} = {'Validate return code 200': {'url': '/authentication/forgotPassword', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'ap...</msg>
<status status="PASS" starttime="20200815 00:25:28.027" endtime="20200815 00:25:28.030"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:28.018" endtime="20200815 00:25:28.031"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:28.032" endtime="20200815 00:25:28.033"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>type</arg>
<arg>${type}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:28.034" endtime="20200815 00:25:28.036"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>partnerId</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:28.036" endtime="20200815 00:25:28.039"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:28.039" endtime="20200815 00:25:28.041"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]["body"]}</arg>
<arg>platformId</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:28.041" endtime="20200815 00:25:28.043"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:28.045" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:28.044" endtime="20200815 00:25:28.045"></status>
</kw>
<msg timestamp="20200815 00:25:28.046" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:28.043" endtime="20200815 00:25:28.046"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:28.048" level="INFO">${my_Body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:28.047" endtime="20200815 00:25:28.048"></status>
</kw>
<msg timestamp="20200815 00:25:28.049" level="INFO">${body} = {'document': '97604451829', 'type': 'email', 'partnerId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'platformId': '3351746b-0edd-457e-9ce0-7ff55e6d93d4'}</msg>
<status status="PASS" starttime="20200815 00:25:28.046" endtime="20200815 00:25:28.049"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/forgotPassword</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:29.516" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 path_url=/authentication/forgotPassword 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjZkNTI0ZWVjLWNiZDctNDAyZS1hYjQ5LWQ0MWVkOTgxMmM1OSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MjcsImV4cCI6MTU5NzQ3NjMyNywiaWF0IjoxNTk3NDYxOTI3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.04VJ4gA_iZCAJ4BLaxS638YfWty49eqKOYcNEO46dp0', 'Content-Length': '151'} 
 body={"document": "97604451829", "type": "email", "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4"} 
 </msg>
<msg timestamp="20200815 00:25:29.516" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/forgotPassword 
 status=200, reason=OK 
 body={
  "Success": true,
  "Message": "Processo finalizado com sucesso",
  "Data": "m****a@g****l.com"
} 
 </msg>
<msg timestamp="20200815 00:25:29.516" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:29.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:28.049" endtime="20200815 00:25:29.516"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:29.516" endtime="20200815 00:25:29.517"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${forgotPasswordPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.517" endtime="20200815 00:25:29.518"></status>
</kw>
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/senha/forgotPassword.json</arg>
<arg>${forgotPasswordPayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:29.519" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/forgotPassword", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "ap...</msg>
<status status="PASS" starttime="20200815 00:25:29.519" endtime="20200815 00:25:29.519"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.521" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\senha\forgotPassword.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:29.519" endtime="20200815 00:25:29.522"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.518" endtime="20200815 00:25:29.522"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:28.016" endtime="20200815 00:25:29.522"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>400</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200815 00:25:29.524" level="FAIL">200 != 400</msg>
<status status="FAIL" starttime="20200815 00:25:29.523" endtime="20200815 00:25:29.524"></status>
</kw>
<status status="FAIL" starttime="20200815 00:25:29.522" endtime="20200815 00:25:29.524"></status>
</kw>
<tags>
<tag>wip</tag>
</tags>
<status status="FAIL" starttime="20200815 00:25:26.351" endtime="20200815 00:25:29.524" critical="yes">200 != 400</status>
</test>
<test id="s1-t9" name="Validar API de Current Time">
<kw name="Login Sucess">
<kw name="Validar o CPF &quot;${CPF_USER}&quot;" library="authorizationKWS">
<kw name="Get Validate Payload" library="authorizationKWS">
<arguments>
<arg>/validateCPF/validateCPF.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:29.527" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\validateCPF\validateCPF.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:29.528" level="INFO">${payloadFile} = {
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "para...</msg>
<status status="PASS" starttime="20200815 00:25:29.527" endtime="20200815 00:25:29.528"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${validatePayload}</var>
</assign>
<msg timestamp="20200815 00:25:29.528" level="INFO">To JSON using : content={
    "Validate return code 200": {
        "url": "/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}",
        "tipo": "GET",
        "parametro": {
            "partnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "platformId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
            "documenttypeid": "1"
        },
        "headers": {
            "Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1"
        },
        "body": "",
        "response": {
            "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
            "IsFirstAccess": false,
            "NeedChangePassword": false
        }
    }
} </msg>
<msg timestamp="20200815 00:25:29.528" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:29.528" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:29.528" endtime="20200815 00:25:29.528"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.529" level="INFO">${validatePayload} = {'Validate return code 200': {'url': '/authentication/97604451829/validate?partnerId={{partnerId}}&amp;platformId={{platformId}}&amp;documenttypeid={{doc}}', 'tipo': 'GET', 'parametro': {'partnerId': '3351746...</msg>
<status status="PASS" starttime="20200815 00:25:29.529" endtime="20200815 00:25:29.529"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.526" endtime="20200815 00:25:29.529"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${validatePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:29.531" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:29.530" endtime="20200815 00:25:29.531"></status>
</kw>
<msg timestamp="20200815 00:25:29.531" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'}</msg>
<status status="PASS" starttime="20200815 00:25:29.530" endtime="20200815 00:25:29.531"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/${CPF_USER}/validate?partnerId=${PARTNER_ID}&amp;platformId=${PLATFORM_ID}&amp;documenttypeid=${DOCUMENTTYPEID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:29.698" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 path_url=/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:29.699" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/97604451829/validate?partnerId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;platformId=3351746b-0edd-457e-9ce0-7ff55e6d93d4&amp;documenttypeid=1 
 status=200, reason=OK 
 body={
  "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "IsFirstAccess": false,
  "NeedChangePassword": false
} 
 </msg>
<msg timestamp="20200815 00:25:29.699" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:29.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:29.531" endtime="20200815 00:25:29.700"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:29.701" endtime="20200815 00:25:29.703"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()["Id"]}</arg>
</arguments>
<assign>
<var>${USER_ID}</var>
</assign>
<msg timestamp="20200815 00:25:29.707" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:29.704" endtime="20200815 00:25:29.707"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${USER_ID}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.710" level="INFO">${USER_ID} = 4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4</msg>
<status status="PASS" starttime="20200815 00:25:29.708" endtime="20200815 00:25:29.710"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.526" endtime="20200815 00:25:29.712"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:29.716" endtime="20200815 00:25:29.720"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.713" endtime="20200815 00:25:29.722"></status>
</kw>
<kw name="Enviar requisição de Login do usuário" library="authorizationKWS">
<kw name="Get Login Payload" library="authorizationKWS">
<arguments>
<arg>/login/login.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:29.727" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\login\login.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:29.728" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application...</msg>
<status status="PASS" starttime="20200815 00:25:29.726" endtime="20200815 00:25:29.728"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${loginPayload}</var>
</assign>
<msg timestamp="20200815 00:25:29.729" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/Login", "tipo": "POST", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json"}, "body": {"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"}, "response": {"access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6ImUxMTFlYzAwLTc4MDMtNDU0ZS1iZDBiLWJmZTJjOWNiMWUzOSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MTcsImV4cCI6MTU5NzQ3NjMxNywiaWF0IjoxNTk3NDYxOTE3LCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.xmFJVw_3asc8Zi5jw2JT0UGHmJtxSD38QLkzUnsU_Ks", "refresh_token": "MMSzLIz2UxFuqI2lcHxhfosRk1wjc83bD6MjkpR4A1Y", "token_type": "bearer", "expires_in": 14400, "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "person": {"Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4", "Name": "Lara Vanessa Louise Monteiro", "SocialName": "Lara Vanessa Louise Monteiro", "Phone": "83988786800", "Cpf": "97604451829", "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "Birthday": "1986-05-31T00:00:00Z", "DateCreated": "2020-07-16T10:53:47Z", "DateChanged": "2020-07-16T10:53:47Z", "IsActive": true}}}} </msg>
<msg timestamp="20200815 00:25:29.729" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:29.730" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:29.728" endtime="20200815 00:25:29.730"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:29.733" level="INFO">${loginPayload} = {'Validate return code 200': {'url': '/authentication/Login', 'tipo': 'POST', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application...</msg>
<status status="PASS" starttime="20200815 00:25:29.731" endtime="20200815 00:25:29.733"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.724" endtime="20200815 00:25:29.734"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:29.739" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:29.737" endtime="20200815 00:25:29.739"></status>
</kw>
<msg timestamp="20200815 00:25:29.741" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200815 00:25:29.734" endtime="20200815 00:25:29.741"></status>
</kw>
<kw name="Get Body By Payload" library="authorizationKWS">
<arguments>
<arg>${loginPayload}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["body"]}</arg>
</arguments>
<assign>
<var>${my_Body}</var>
</assign>
<msg timestamp="20200815 00:25:29.744" level="INFO">${my_Body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:29.743" endtime="20200815 00:25:29.744"></status>
</kw>
<msg timestamp="20200815 00:25:29.745" level="INFO">${body} = {'password': '123456', 'partnerID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'document': '97604451829', 'platformID': '3351746b-0edd-457e-9ce0-7ff55e6d93d4', 'grantType': 'cpf'}</msg>
<status status="PASS" starttime="20200815 00:25:29.741" endtime="20200815 00:25:29.745"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>password</arg>
<arg>${PASSWORD}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.746" endtime="20200815 00:25:29.747"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>partnerID</arg>
<arg>${PARTNER_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.748" endtime="20200815 00:25:29.750"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>document</arg>
<arg>${CPF_USER}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.750" endtime="20200815 00:25:29.752"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>platformID</arg>
<arg>${PLATFORM_ID}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.752" endtime="20200815 00:25:29.753"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>body</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:29.753" endtime="20200815 00:25:29.755"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/Login</arg>
<arg>data=${body}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:30.443" level="INFO">POST Request : url=https://sandbox-code.biz.com.br/authentication/Login 
 path_url=/authentication/Login 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"password": "123456", "partnerID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "document": "97604451829", "platformID": "3351746b-0edd-457e-9ce0-7ff55e6d93d4", "grantType": "cpf"} 
 </msg>
<msg timestamp="20200815 00:25:30.444" level="INFO">POST Response : url=https://sandbox-code.biz.com.br/authentication/Login 
 status=200, reason=OK 
 body={
  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjdkNTFmMWJkLTc4YmMtNDdiMi04NDliLTMzNTkyYjM4YWJlYSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MzAsImV4cCI6MTU5NzQ3NjMzMCwiaWF0IjoxNTk3NDYxOTMwLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.6NrLzkcowxJo7hlbzVqMfNnk3CQPFcWhsP5NicxShv0",
  "refresh_token": "KHT2WMsCEBFESjATEZ6v4Ygw6QZYDjdYJUmShnwIo",
  "token_type": "bearer",
  "expires_in": 14400,
  "user_id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
  "person": {
    "Id": "4c7dd5e7-acf0-4dc5-9ae3-317d305df5d4",
    "Name": "Lara Vanessa Louise Monteiro",
    "SocialName": "Lara Vanessa Louise Monteiro",
    "Phone": "83988786800",
    "Cpf": "97604451829",
    "PartnerId": "3351746b-0edd-457e-9ce0-7ff55e6d93d4",
    "Birthday": "1986-05-31T00:00:00Z",
    "DateCreated": "2020-07-16T10:53:47Z",
    "DateChanged": "2020-07-16T10:53:47Z",
    "IsActive": true
  }
} 
 </msg>
<msg timestamp="20200815 00:25:30.445" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:30.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:29.755" endtime="20200815 00:25:30.446"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.447" endtime="20200815 00:25:30.451"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.455" endtime="20200815 00:25:30.459"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.452" endtime="20200815 00:25:30.460"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:30.461" endtime="20200815 00:25:30.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${loginPayload["Validate return code 200"]["response"]["access_token"]}</arg>
</arguments>
<assign>
<var>${ACCESS_TOKEN}</var>
</assign>
<msg timestamp="20200815 00:25:30.469" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjdkNTFmMWJkLTc4YmMtNDdiMi04NDliLTMzNTkyYjM4YWJlYSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:30.467" endtime="20200815 00:25:30.469"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ACCESS_TOKEN}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.473" level="INFO">${ACCESS_TOKEN} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjdkNTFmMWJkLTc4YmMtNDdiMi04NDliLTMzNTkyYjM4YWJlYSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUB...</msg>
<status status="PASS" starttime="20200815 00:25:30.470" endtime="20200815 00:25:30.473"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.722" endtime="20200815 00:25:30.474"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.476" endtime="20200815 00:25:30.478"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.474" endtime="20200815 00:25:30.478"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.525" endtime="20200815 00:25:30.478"></status>
</kw>
<kw name="Enviar requisição de currentTime" library="authorizationKWS">
<kw name="Get CurrentTime Payload" library="authorizationKWS">
<arguments>
<arg>/currentTime/currentTime.json</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
</arguments>
<assign>
<var>${payloadFile}</var>
</assign>
<msg timestamp="20200815 00:25:30.482" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\currentTime\currentTime.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\currentTime\currentTime.json&lt;/a&gt;'.</msg>
<msg timestamp="20200815 00:25:30.487" level="INFO">${payloadFile} = {"Validate return code 200": {"url": "/authentication/CurrentTime", "tipo": "GET", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "applic...</msg>
<status status="PASS" starttime="20200815 00:25:30.482" endtime="20200815 00:25:30.487"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${payloadFile}</arg>
</arguments>
<assign>
<var>${currentTimePayload}</var>
</assign>
<msg timestamp="20200815 00:25:30.489" level="INFO">To JSON using : content={"Validate return code 200": {"url": "/authentication/CurrentTime", "tipo": "GET", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "application/json", "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjljMGI3NDA3LTRhOTYtNDFhNy04N2U5LTQ0MWQ4MWRiNTFkYiIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTczNTQzODAsImV4cCI6MTU5NzM2ODc4MCwiaWF0IjoxNTk3MzU0MzgwLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.5P94-pJl6mmAAqJe61p_ZZtexdAiKzvAVDE5QVNn1Sg"}, "body": "", "response": {"DateTime": "2020-08-13T18:33:00Z", "Year": 2020, "Month": 8, "Day": 13, "Hour": 18, "Minute": 33, "Second": 0, "Millisecond": 411, "Ticks": 637329403804116070, "DayOfWeek": 4, "DayOfYear": 226}}} </msg>
<msg timestamp="20200815 00:25:30.489" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20200815 00:25:30.489" level="INFO">${currentTimePayload} = {'Validate return code 200': {'url': '/authentication/CurrentTime', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'applic...</msg>
<status status="PASS" starttime="20200815 00:25:30.488" endtime="20200815 00:25:30.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${currentTimePayload}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.492" level="INFO">${currentTimePayload} = {'Validate return code 200': {'url': '/authentication/CurrentTime', 'tipo': 'GET', 'parametro': '', 'headers': {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'applic...</msg>
<status status="PASS" starttime="20200815 00:25:30.490" endtime="20200815 00:25:30.492"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.480" endtime="20200815 00:25:30.494"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${currentTimePayload["Validate return code 200"]["headers"]}</arg>
<arg>Authorization</arg>
<arg>Bearer ${ACCESS_TOKEN}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:30.494" endtime="20200815 00:25:30.496"></status>
</kw>
<kw name="Get Headers By Payload" library="authorizationKWS">
<arguments>
<arg>${currentTimePayload}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${payloadFile["Validate return code 200"]["headers"]}</arg>
</arguments>
<assign>
<var>${my_Headers}</var>
</assign>
<msg timestamp="20200815 00:25:30.499" level="INFO">${my_Headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:30.497" endtime="20200815 00:25:30.499"></status>
</kw>
<msg timestamp="20200815 00:25:30.500" level="INFO">${headers} = {'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFj...</msg>
<status status="PASS" starttime="20200815 00:25:30.496" endtime="20200815 00:25:30.500"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>bizSandboxAPI</arg>
<arg>/authentication/CurrentTime</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200815 00:25:30.719" level="INFO">GET Request : url=https://sandbox-code.biz.com.br/authentication/CurrentTime 
 path_url=/authentication/CurrentTime 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Ocp-Apim-Subscription-Key': '7929bc5aed4c4ff1b1d149c48470cda1', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsImp0aSI6IjdkNTFmMWJkLTc4YmMtNDdiMi04NDliLTMzNTkyYjM4YWJlYSIsImVtYWlsIjoibWFyY29zYXRhbmFrYUBnbWFpbC5jb20iLCJJZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIlBhcnRuZXJJZCI6IjMzNTE3NDZiLTBlZGQtNDU3ZS05Y2UwLTdmZjU1ZTZkOTNkNCIsIlBhcnRuZXJEb2N1bWVudCI6IiIsIlBsYXRmb3JtSWQiOiIzMzUxNzQ2Yi0wZWRkLTQ1N2UtOWNlMC03ZmY1NWU2ZDkzZDQiLCJQZXJzb25JZCI6IjRjN2RkNWU3LWFjZjAtNGRjNS05YWUzLTMxN2QzMDVkZjVkNCIsIkNwZiI6Ijk3NjA0NDUxODI5IiwiUGhvbmUiOiI4Mzk4ODc4NjgwMCIsIlBob3RvIjoiIiwic3ViIjoiTGFyYSBWYW5lc3NhIExvdWlzZSBNb250ZWlybyIsInJvbGUiOiJBZG1pbmlzdHJhdG9yIiwicGVybWlzc2lvbnMiOlsiQWRtaW5pc3RyYXRvci1SZWFkIiwiQWRtaW5pc3RyYXRvci1Xcml0ZSIsIkFkbWluaXN0cmF0b3ItUmVwb3J0IiwiQWRtaW5pc3RyYXRvci1EZWxldGUiLCJBZG1pbmlzdHJhdG9yLVVwZGF0ZSJdLCJJc3N1ZXJzIjpbIntcIklzc3VlcklkXCI6NyxcIkJyYW5jaE9mZmljZUlkXCI6MSxcIlByb2R1Y3RJZFwiOjg0LFwiQWZmaW5pdHlHcm91cElkXCI6MH0iLCJ7XCJJc3N1ZXJJZFwiOjcsXCJCcmFuY2hPZmZpY2VJZFwiOjEsXCJQcm9kdWN0SWRcIjo4MyxcIkFmZmluaXR5R3JvdXBJZFwiOjB9Iiwie1wiSXNzdWVySWRcIjozLFwiQnJhbmNoT2ZmaWNlSWRcIjoxLFwiUHJvZHVjdElkXCI6NTcsXCJBZmZpbml0eUdyb3VwSWRcIjowfSJdLCJuYmYiOjE1OTc0NjE5MzAsImV4cCI6MTU5NzQ3NjMzMCwiaWF0IjoxNTk3NDYxOTMwLCJpc3MiOiJCSVotQVVUSC1BUEkiLCJhdWQiOiJCSVotRUNPU1lTVEVNIn0.6NrLzkcowxJo7hlbzVqMfNnk3CQPFcWhsP5NicxShv0'} 
 body=None 
 </msg>
<msg timestamp="20200815 00:25:30.719" level="INFO">GET Response : url=https://sandbox-code.biz.com.br/authentication/CurrentTime 
 status=200, reason=OK 
 body={
  "DateTime": "2020-08-15T00:25:30Z",
  "Year": 2020,
  "Month": 8,
  "Day": 15,
  "Hour": 0,
  "Minute": 25,
  "Second": 30,
  "Millisecond": 659,
  "Ticks": 637330479306596760,
  "DayOfWeek": 6,
  "DayOfYear": 228
} 
 </msg>
<msg timestamp="20200815 00:25:30.720" level="INFO">c:\python38\lib\site-packages\urllib3\connectionpool.py:979: InsecureRequestWarning: Unverified HTTPS request is being made to host 'sandbox-code.biz.com.br'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20200815 00:25:30.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.501" endtime="20200815 00:25:30.720"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.720" endtime="20200815 00:25:30.721"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${currentTimePayload["Validate return code 200"]}</arg>
<arg>response</arg>
<arg>${response.json()}</arg>
</arguments>
<status status="PASS" starttime="20200815 00:25:30.721" endtime="20200815 00:25:30.722"></status>
</kw>
<kw name="Update JsonFile" library="authorizationKWS">
<arguments>
<arg>/currentTime/currentTime.json</arg>
<arg>${currentTimePayload}</arg>
</arguments>
<kw name="Convert JSON To String" library="JSONLibrary">
<doc>Convert JSON object to string</doc>
<arguments>
<arg>${newFile}</arg>
</arguments>
<assign>
<var>${stringFile}</var>
</assign>
<msg timestamp="20200815 00:25:30.724" level="INFO">${stringFile} = {"Validate return code 200": {"url": "/authentication/CurrentTime", "tipo": "GET", "parametro": "", "headers": {"Ocp-Apim-Subscription-Key": "7929bc5aed4c4ff1b1d149c48470cda1", "Content-Type": "applic...</msg>
<status status="PASS" starttime="20200815 00:25:30.723" endtime="20200815 00:25:30.724"></status>
</kw>
<kw name="Create File" library="OperatingSystem">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${EXECDIR}/resources/payload/${jsonFile}</arg>
<arg>${stringFile}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.726" level="INFO" html="yes">Created file '&lt;a href="file://C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\currentTime\currentTime.json"&gt;C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\payload\currentTime\currentTime.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20200815 00:25:30.724" endtime="20200815 00:25:30.726"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.722" endtime="20200815 00:25:30.727"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.479" endtime="20200815 00:25:30.727"></status>
</kw>
<kw name="Conferir o status code" library="authorizationKWS">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${statusCode_response}</arg>
</arguments>
<msg timestamp="20200815 00:25:30.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200815 00:25:30.728" endtime="20200815 00:25:30.728"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:30.727" endtime="20200815 00:25:30.728"></status>
</kw>
<status status="PASS" starttime="20200815 00:25:29.525" endtime="20200815 00:25:30.729" critical="yes"></status>
</test>
<doc>Documentation of API Tests Suites</doc>
<status status="FAIL" starttime="20200815 00:25:13.009" endtime="20200815 00:25:30.735"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="2">Critical Tests</stat>
<stat pass="7" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="1">wip</stat>
</tag>
<suite>
<stat pass="7" fail="2" id="s1" name="authorizationAPI">authorizationAPI</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200815 00:25:14.334" level="ERROR">Error in file 'C:\Repository\OMNI\Docker\Cartões\RobotFramework_APITest\resources\base.robot' on line 7: Resource file 'keywords\resourceMobile.robot' does not exist.</msg>
</errors>
</robot>
